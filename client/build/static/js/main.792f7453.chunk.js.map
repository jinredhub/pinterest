{"version":3,"sources":["axios.js","firebase.js","components/Navbar/Navbar.js","components/Button/Button.js","components/Modal/Modal.js","components/Input/Input.js","components/Pin/Pin.js","pages/Home/Home.js","components/Input2/Input2.js","pages/Login/Login.js","pages/Signup/Signup.js","pages/Pins/Pins.js","pages/FollowingPins/FollowingPins.js","App.js","serviceWorker.js","index.js","assets/Swan_large_1450932169.jpg"],"names":["instance","axios","create","baseURL","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","navbar","props","react_default","a","createElement","className","children","button","btnClass","color","Object","assign","disabled","modal","showModal","console","log","canSaveButton","onClick","onCloseBtnClicked","title","Button_Button","type","onSaveBtnClicked","input","inputElement","inputtype","label","pin","onPinSaveButtonClicked","webUrl","length","substring","style","src","imageUrl","alt","onWebUrlClicked","Home","state","allUsers","allPins","loadDatabase","get","then","res","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","user","value","yourPins","followingPins","err","return","_this","setState","dbLoaded","lastPinId","setStateAllPins","catch","updateDatabase","toConsumableArray","ref","set","loginEmail","copyAllUsers","userIndex","findIndex","val","email","splice","pinsToDisplayWithFollowingPins","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","push","yourFollowingPins","indexes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop","remVal","pinId","_iterator3","sortedIndexes","sort","b","i","logOutHandler","signOut","inputTextHandler","ev","target","files","createPinHandler","newPin","file","name","put","child","getDownloadURL","url","this","closeModalHandler","bind","assertThisInitialized","webUrlHandler","window","open","savePinHandler","indexOfPin","indexOfUser","_this2","onAuthStateChanged","firebaseUser","currentUser","location","href","_this3","pins","map","Pin_Pin","key","Navbar_Navbar","Modal_Modal","Input_Input","onChange","Component","input2","labelElement","styleLabel","styleLabelForCheckbox","req","htmlFor","id","fileLabelSpan","filelabelspan","fileLabel","filelabel","spanText","data-multiple-caption","options","option","displayValue","Fragment","checked","selected","ischecked","Login","errorMessage","emailText","passwordText","inputHandler","labelVal","nextElementSibling","innerHTML","fileName","getAttribute","replace","split","pop","span","defineProperty","objectSpread","handleKeyPress","formLoginHandler","password","signInWithEmailAndPassword","e","message","form","Input2_Input2","onKeyPress","autoFocus","SignUp","firstNameText","lastNameText","firstName","lastName","formSignupHandler","createUserWithEmailAndPassword","Pins","tweets","following","FollowingPins","setStateFollowingPins","App","react_router_dom","react_router","path","exact","component","Signup","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"8cAMeA,SAJEC,EAAMC,OAAO,CAC1BC,QAAS,qECQbC,gBARa,CACTC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,gBAIvB,IAAMC,EAAWP,aCFFQ,UARA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVJ,EAAMK,YCiBJC,iBApBA,SAACN,GAEZ,IAAIO,EAAW,GAWf,OATIA,EADe,YAAhBP,EAAMQ,MACI,kBAEW,WAAhBR,EAAMQ,MACC,aAGA,MAIXP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAAM,OAAAC,OAAA,CAAQC,SAAUX,EAAMW,SAAUP,UAAWG,GAAcP,GAAQA,EAAMK,aCqBtEO,EAlCD,SAACZ,GAGX,OAAIA,EAAMa,WAGVC,QAAQC,IAAI,kBAAmBf,EAAMgB,eACrCF,QAAQC,IAAI,cAAef,EAAMa,WAG7BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMc,QAASjB,EAAMkB,kBAAmBd,UAAU,SAAlD,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVJ,EAAMmB,OAGXlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACVJ,EAAMK,UAGXJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNa,KAAK,SACLJ,QAASjB,EAAMsB,iBACfX,SAAUX,EAAMgB,eAJpB,cAlBL,MCkBAO,UAxBD,SAACvB,GACX,IAAIwB,EAAe,KAenB,MAbuB,UAApBxB,EAAMyB,WAAwC,SAAfzB,EAAMqB,KACpCG,EAAevB,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,CAAON,UAAU,gBAAmBJ,IAE3B,aAApBA,EAAMyB,UACVD,EAAevB,EAAAC,EAAAC,cAAA,WAAAM,OAAAC,OAAA,CAAUN,UAAU,gBAAmBJ,IAE9B,UAApBA,EAAMyB,WAAwC,SAAfzB,EAAMqB,KACzCG,EAAevB,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,CAAON,UAAU,IAAOJ,IAEf,UAApBA,EAAMyB,WAAwC,aAAfzB,EAAMqB,OACzCG,EAAevB,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,CAAON,UAAU,gBAAmBJ,KAInDC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,aAAQH,EAAM0B,OACbF,KCcEG,UAhCH,SAAC3B,GAET,IAKIM,EAAS,GACVN,EAAM4B,yBACLtB,EAASL,EAAAC,EAAAC,cAACiB,EAAD,CAAQH,QAASjB,EAAM4B,uBAAwBxB,UAAU,kBAAzD,SAIb,IAAIyB,EAAS,GAUb,OATG7B,EAAM6B,SAEDA,EADD7B,EAAM6B,OAAOC,OAAS,GACZ9B,EAAM6B,OAAOE,UAAU,EAAG,IAAI,MAG9B/B,EAAM6B,QAKnB5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAM4B,MAtBX,IAuBN/B,EAAAC,EAAAC,cAAA,OAAK8B,IAAKjC,EAAMkC,SAAUC,IAAI,UAC7B7B,EACDL,EAAAC,EAAAC,cAAA,QAAMc,QAASjB,EAAMoC,gBAAiBhC,UAAU,WAAhD,OAAiEyB,EAAjE,WC4UGQ,oNA7VXC,MAAM,CACFC,SAAU,GASVC,QAAS,GAgCT3B,WAAW,EACXG,eAAe,KAqBnByB,aAAe,WACXrD,EAAMsD,IAAI,UACLC,KAAK,SAAAC,GACF9B,QAAQC,IAAI,SAAS6B,EAAIC,MADlB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIP,QAAAC,EAAAC,EAAgBP,EAAIC,KAAKN,SAAzBa,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAA1BU,EAA0BN,EAAAO,MAC1BD,EAAKE,WACLF,EAAKE,SAAW,IAEhBF,EAAKG,gBACLH,EAAKG,cAAgB,KATtB,MAAAC,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GAYPlC,QAAQC,IAAI,iBAAkB6B,EAAIC,MAClCiB,EAAKC,SAAS,CACVxB,SAAUK,EAAIC,KAAKN,SACnByB,UAAU,EACVC,UAAWrB,EAAIC,KAAKoB,YAExBH,EAAKI,oBAERC,MAAM,SAAAP,GAAG,OAAE9C,QAAQC,IAAI6C,QAGhCQ,eAAiB,SAAC7B,GACdzB,QAAQC,IAAI,iBAAkB+C,EAAKxB,MAAMC,UACzCzB,QAAQC,IAAI,iBAAkBwB,GAE9B,IAAMM,EAAIpC,OAAA4D,EAAA,EAAA5D,CAAOqD,EAAKxB,MAAMC,UACtB0B,EAAYH,EAAKxB,MAAM2B,UAC7BnE,EAASwE,IAAI,wBAAwBC,IAAI,CACrChC,SAAUM,EACVoB,UAAWA,OAInBC,gBAAkB,WACd,IAAMM,EAAaV,EAAKxB,MAAMkC,WAExBjC,EAAQ9B,OAAA4D,EAAA,EAAA5D,CAAOqD,EAAKxB,MAAMC,UAI1BkC,EAAYhE,OAAA4D,EAAA,EAAA5D,CAAOqD,EAAKxB,MAAMC,UAG9BmC,EAAYD,EAAaE,UAAU,SAAAC,GACrC,OAAOA,EAAIC,QAAUL,IAIzBC,EAAaK,OAAOJ,EAAW,GAE/B,IAAMK,EAAiC,GAjBpBC,GAAA,EAAAC,GAAA,EAAAC,OAAAjC,EAAA,IAkBnB,QAAAkC,EAAAC,EAAgBX,EAAhBrB,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,GAAA,EAA6B,KAArBxB,EAAqB2B,EAAA1B,MAAA4B,GAAA,EAAAC,GAAA,EAAAC,OAAAtC,EAAA,IACzB,QAAAuC,EAAAC,EAAejC,EAAKE,SAApBN,OAAAC,cAAAgC,GAAAG,EAAAC,EAAAnC,QAAAC,MAAA8B,GAAA,EAA6B,KAArB1D,EAAqB6D,EAAA/B,MACzBsB,EAA+BW,KAAK/D,IAFf,MAAAiC,GAAA0B,GAAA,EAAAC,EAAA3B,EAAA,YAAAyB,GAAA,MAAAI,EAAA5B,QAAA4B,EAAA5B,SAAA,WAAAyB,EAAA,MAAAC,KAlBV,MAAA3B,GAAAqB,GAAA,EAAAC,EAAAtB,EAAA,YAAAoB,GAAA,MAAAI,EAAAvB,QAAAuB,EAAAvB,SAAA,WAAAoB,EAAA,MAAAC,GAwBnBpE,QAAQC,IAAI,mCAAmCgE,GAG/C,IAAMY,EAAoBpD,EAASmC,GAAWf,cAExCiC,EAAU,GAGhB,GAAGD,EAAkB7D,OAAO,KAAA+D,GAAA,EAAAC,GAAA,EAAAC,OAAA9C,EAAA,IACxB,IADwB,IACxB+C,EADwBC,EAAA,eAChBC,EADgBF,EAAAvC,MAEpBmC,EAAQF,KAAKX,EAA+BJ,UAAU,SAASC,GAC3D,OAAOA,EAAIuB,QAAUD,EAAOC,UAFpCC,EAAkBT,EAAlBvC,OAAAC,cAAAwC,GAAAG,EAAAI,EAAA9C,QAAAC,MAAAsC,GAAA,EAAoCI,IADZ,MAAArC,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,YAAAiC,GAAA,MAAAO,EAAAvC,QAAAuC,EAAAvC,SAAA,WAAAiC,EAAA,MAAAC,GAaxB,IAHA,IAAMM,EAAgBT,EAAQU,KAAK,SAASpG,EAAGqG,GAAI,OAAOrG,EAAIqG,IAGtDC,EAAEH,EAAcvE,OAAO,EAAG0E,GAAG,EAAGA,IACpCzB,EAA+BD,OAAOuB,EAAcG,GAAI,GAOhE1C,EAAKC,SAAS,CAACvB,QAASuC,OAG5B0B,cAAgB,WACZ3F,QAAQC,IAAI,eACZxB,SAAgBmH,aAGpBC,iBAAmB,SAACC,EAAIvF,GACR,UAATA,EACCyC,EAAKC,SAAS,CAAC5C,MAAOyF,EAAGC,OAAOpD,QAEnB,WAATpC,EACJyC,EAAKC,SAAS,CAAClC,OAAQ+E,EAAGC,OAAOpD,QAEpB,SAATpC,GACJyC,EAAKC,SAAS,CAAC7B,SAAU0E,EAAGC,OAAOC,MAAM,QAKjDC,iBAAmB,SAAClC,GAEhB,GAAGf,EAAKxB,MAAMnB,OAAS2C,EAAKxB,MAAMJ,UAAY4B,EAAKxB,MAAMT,OAAO,CAC5D,IAAMmF,EAAS,GACfA,EAAO7F,MAAQ2C,EAAKxB,MAAMnB,MAC1B6F,EAAO9E,SAAW4B,EAAKxB,MAAMJ,SAC7B8E,EAAOnF,OAASiC,EAAKxB,MAAMT,OAE3B,IAAIoC,EAAYH,EAAKxB,MAAM2B,UAC3BnD,QAAQC,IAAI,YAAakD,GACzB+C,EAAOb,MAAQlC,EAAU,EACzBnD,QAAQC,IAAI,OAAQiG,EAAOb,OAI3BrC,EAAKC,SAAS,CACV/C,eAAe,EACfiD,UAAW+C,EAAOb,QAItB,IAAMc,EAAOnD,EAAKxB,MAAMJ,SAGL3C,YAAmB+E,IAAI,qBAAuB2C,EAAKC,MAG3DC,IAAIF,GAAMtE,KAAK,WAENpD,YAAmB+E,MAC3B8C,MAAM,qBAAqBH,EAAKC,MAAMG,iBAAiB1E,KAAK,SAAS2E,GACzExG,QAAQC,IAAI,QAASuG,GACrBN,EAAO9E,SAAWoF,EAIlB,IAAM/E,EAAQ9B,OAAA4D,EAAA,EAAA5D,CAAO8G,KAAKjF,MAAMC,UAChCzB,QAAQC,IAAI,QAASwB,GACrB,IAAMmC,EAAYnC,EAASoC,UAAU,SAAAC,GACjC,OAAOA,EAAIC,QAAUA,IAEzB/D,QAAQC,IAAI,OAAQ2D,GACpBnC,EAASmC,GAAWhB,SAASgC,KAAKsB,GAClCO,KAAKC,oBAELD,KAAKnD,eAAe7B,GAGpBgF,KAAKxD,SAAS,CACV/C,eAAe,EACfG,MAAO,GACPU,OAAQ,GACRK,SAAU,MAEhBuF,KAAKF,QACTE,KA5BwBhH,OAAAiH,EAAA,EAAAjH,QAAAiH,EAAA,EAAAjH,CAAAqD,UAgClCjD,UAAY,WACRiD,EAAKC,SAAS,CAAClD,WAAW,OAE9B2G,kBAAoB,WAChB1D,EAAKC,SAAS,CAAClD,WAAW,OAI9B8G,cAAgB,SAAC9F,GACbf,QAAQC,IAAI,QAASc,GACrB+F,OAAOC,KAAKhG,MAGhBiG,eAAiB,SAAC3B,GACdrF,QAAQC,IAAI,UAAWoF,GACvB,IAAM3D,EAAO/B,OAAA4D,EAAA,EAAA5D,CAAOqD,EAAKxB,MAAME,SAEzBuF,EAAavF,EAAQmC,UAAU,SAAAC,GACjC,OAAOA,EAAIuB,QAAUA,IAInB3B,EAAaV,EAAKxB,MAAMkC,WACxBjC,EAAQ9B,OAAA4D,EAAA,EAAA5D,CAAOqD,EAAKxB,MAAMC,UAC1ByF,EAAczF,EAASoC,UAAU,SAAAC,GACnC,OAAOA,EAAIC,QAAUL,IAIzBjC,EAASyF,GAAarE,cAAc+B,KAAKlD,EAAQuF,IAEjDjE,EAAKC,SAAS,CACVxB,SAAUA,IAGdzB,QAAQC,IAAI+C,EAAKxB,OACjBwB,EAAKM,iBAELN,EAAKI,sGAlOU,IAAA+D,EAAAV,KACfzG,QAAQC,IAAI,uBACZxB,SAAgB2I,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZF,EAAKlE,SAAS,CAAES,WAAY2D,EAAatD,QAE5BtF,SAAgB6I,YAE7BH,EAAKxF,mBAEL,CAEAmF,OAAOS,SAASC,KADJ,IAEZxH,QAAQC,IAAI,qDAwNhB,IAAAwH,EAAAhB,KACAiB,EAAO,KAmBX,OAlBGjB,KAAKjF,MAAM0B,WACVlD,QAAQC,IAAI,kCAAkCwG,KAAKjF,OAE/CkG,EADDjB,KAAKjF,MAAME,SAAW+E,KAAKjF,MAAME,QAAQV,OACjCyF,KAAKjF,MAAME,QAAQiG,IAAI,SAAA9G,GAC1B,OAAO1B,EAAAC,EAAAC,cAACuI,EAAD,CACHvH,MAAOQ,EAAIR,MACXe,SAAUP,EAAIO,SACdL,OAAQF,EAAIE,OACZ8G,IAAKhH,EAAIwE,MACT/D,gBAAiBmG,EAAKZ,cAAcF,KAAKc,EAAM5G,EAAIE,QACnDD,uBAAwB2G,EAAKT,eAAeL,KAAKc,EAAM5G,EAAIwE,WAI5DlG,EAAAC,EAAAC,cAAA,0CAKXF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACyI,EAAD,KACI3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGmI,KAAK,SAAR,QACArI,EAAAC,EAAAC,cAAA,KAAGmI,KAAK,SAAR,aACArI,EAAAC,EAAAC,cAAA,KAAGmI,KAAK,cAAR,mBAEJrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNS,QAASsG,KAAK1G,WAFlB,cAGAZ,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNS,QAASsG,KAAKd,eAFlB,aAMRxG,EAAAC,EAAAC,cAAC0I,EAAD,CACI1H,MAAM,kBACNG,iBAAkBiG,KAAKR,iBAAiBU,KAAKF,KAAMA,KAAKjF,MAAMkC,YAC9DtD,kBAAmBqG,KAAKC,kBACxB3G,UAAW0G,KAAKjF,MAAMzB,UACtBG,cAAeuG,KAAKjF,MAAMtB,eAE1Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC2I,EAAD,CACIrH,UAAU,QACVJ,KAAK,OACLK,MAAM,cACNqH,SAAU,SAACnC,GAAD,OAAM2B,EAAK5B,iBAAiBC,EAAI,YAC9C3G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2I,EAAD,CACIrH,UAAU,QACVJ,KAAK,OACLK,MAAM,qBACNqH,SAAU,SAACnC,GAAD,OAAM2B,EAAK5B,iBAAiBC,EAAI,aAC9C3G,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC2I,EAAD,CACIrH,UAAU,QACVJ,KAAK,OACLK,MAAM,cACNqH,SAAU,SAACnC,GAAD,OAAM2B,EAAK5B,iBAAiBC,EAAI,aAGtD3G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVoI,WAtVFQ,8BC+EJC,iBAxFA,SAACjJ,GACZ,IAAIkJ,EAAe,KACf1H,EAAe,KACf2H,EAAa,aACbC,EAAwB,oBAO5B,GALGpJ,EAAMqJ,MACLF,GAAc,OACdC,GAAyB,QAGN,UAApBpJ,EAAMyB,WAAwC,SAAfzB,EAAMqB,KACpC6H,EAAgBjJ,EAAAC,EAAAC,cAAA,SAAOC,UAAW+I,EAAYG,QAAStJ,EAAMuJ,IAAKvJ,EAAM0B,OACxEF,EAAevB,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,CAAON,UAAU,aAAgBJ,SAG/C,GAAuB,UAApBA,EAAMyB,WAAwC,aAAfzB,EAAMqB,KACzC6H,EAAgBjJ,EAAAC,EAAAC,cAAA,SAAOC,UAAW+I,EAAYG,QAAStJ,EAAMuJ,IAAKvJ,EAAM0B,OACxEF,EAAevB,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,CAAON,UAAU,aAAgBJ,SAE/C,GAAuB,aAApBA,EAAMyB,UACVyH,EAAgBjJ,EAAAC,EAAAC,cAAA,SAAOC,UAAW+I,EAAYG,QAAStJ,EAAMuJ,IAAKvJ,EAAM0B,OACxEF,EAAevB,EAAAC,EAAAC,cAAA,WAAAM,OAAAC,OAAA,CAAUN,UAAU,aAAgBJ,SAElD,GAAuB,UAApBA,EAAMyB,WAAwC,SAAfzB,EAAMqB,KAAgB,CAGzD,IAAImI,EAAgBxJ,EAAMyJ,cACtBC,EAAY1J,EAAM2J,UAClBC,EAAW5J,EAAM0B,MAClB1B,EAAMyJ,eACLG,EAAW,KACXF,EAAY,MAER1J,EAAM2J,YACVC,EAAW,KACXJ,EAAgB,MAEpBhI,EAAevB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,GAAWV,EAAX,CAAkBI,UAAU,YACrByJ,wBAAsB,4BAC7B5J,EAAAC,EAAAC,cAAA,SAAOmJ,QAAStJ,EAAMuJ,IAAItJ,EAAAC,EAAAC,cAAA,YAAOqJ,EAAeE,EAAWE,SAGnD,WAApB5J,EAAMyB,WACVyH,EAAgBjJ,EAAAC,EAAAC,cAAA,SAAOC,UAAW+I,EAAYG,QAAStJ,EAAMuJ,IAAKvJ,EAAM0B,OACxEF,EAAevB,EAAAC,EAAAC,cAAA,SAAAM,OAAAC,OAAA,CAAQN,UAAU,eAAkBJ,GAC9CA,EAAM8J,QAAQrB,IAAI,SAAAsB,GACf,OAAO9J,EAAAC,EAAAC,cAAA,UAAQwI,IAAKoB,EAAOtG,MAAOA,MAAOsG,EAAOtG,OAAQsG,EAAOC,kBAI/C,UAApBhK,EAAMyB,WAAwC,UAAfzB,EAAMqB,KAMzCG,EAAevB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbJ,EAAM8J,QAAQrB,IAAI,SAAAsB,GACf,OAAO9J,EAAAC,EAAAC,cAACF,EAAAC,EAAM+J,SAAP,CAAgBtB,IAAKoB,EAAOR,IAC/BtJ,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,GAAWV,EAAX,CAAkBqB,KAAMrB,EAAMqB,KAAMjB,UAAU,gDAAgDmJ,GAAIQ,EAAOR,GAAIrC,KAAMlH,EAAMkH,KAAMzD,MAAOsG,EAAOtG,MAAOyG,QAASH,EAAOtG,QAAUzD,EAAMmK,YACpLlK,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAwBkJ,QAASS,EAAOR,IAAKQ,EAAOrI,WAKrE,UAApB1B,EAAMyB,WAAwC,aAAfzB,EAAMqB,OAIzCG,EAAevB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SAAOC,UAAWgJ,EAAuBE,QAAStJ,EAAMkH,MAAOlH,EAAM0B,MACrEzB,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,GAAWV,EAAX,CAAkBkK,UAAWlK,EAAMoK,aAC3BnK,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAM5C,OACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACV8I,EACA1H,KC+EE6I,6MA9JX/H,MAAM,CACFgI,aAAc,GACdzH,KAAO,CACH0H,UAAY,GACZC,aAAc,OAqCtBC,aAAe,SAAC7D,GAEZ,GADA9F,QAAQC,IAAI,SAAU6F,EAAGC,OAAOxF,MAC7BuF,EAAGC,OAAOxF,MAA2B,SAAnBuF,EAAGC,OAAOxF,KAAgB,CAE3C,IACMqJ,EADQ9D,EAAGC,OAAO8D,mBACDC,UAEnBC,EAAW,GAQf,GANIA,EADDjE,EAAGC,OAAOC,OAASF,EAAGC,OAAOC,MAAMhF,OAAS,GAC/B8E,EAAGC,OAAOiE,aAAa,0BAA4B,IAAIC,QAAQ,UAAWnE,EAAGC,OAAOC,MAAMhF,QAG3F8E,EAAGC,OAAOpD,MAAMuH,MAAM,MAAMC,MAG/B,CACR,IAAMC,EAAOtE,EAAGC,OAAOK,KAAM,EAC7BpG,QAAQC,IAAI,eAAgBmK,GAC5BpH,EAAKC,SAALtD,OAAA0K,EAAA,EAAA1K,CAAA,GAAiByK,EAAOL,QAExB,CACA,IAAMnJ,EAAQkF,EAAGC,OAAOK,KAAM,EAC9BpD,EAAKC,SAALtD,OAAA0K,EAAA,EAAA1K,CAAA,GAAgBiB,EAAOgJ,UAU1B,GAAG9D,EAAGC,OAAOxF,MAA2B,aAAnBuF,EAAGC,OAAOxF,KAEhC,GADAP,QAAQC,IAAI,aAAc6F,EAAGC,OAAOqD,SACjCtD,EAAGC,OAAOqD,QAAQ,CACjB,IAAMrH,EAAIpC,OAAA2K,EAAA,EAAA3K,CAAA,GAAOqD,EAAKxB,MAAMO,MAC5BA,EAAK+D,EAAGC,OAAOK,MAAQN,EAAGC,OAAOpD,MACjCK,EAAKC,SAAS,CAAElB,KAAOA,QAEvB,CACA,IAAMA,EAAIpC,OAAA2K,EAAA,EAAA3K,CAAA,GAAOqD,EAAKxB,MAAMO,MAC5BA,EAAK+D,EAAGC,OAAOK,MAAQ,GACvBpD,EAAKC,SAAS,CAAElB,KAAMA,QAG1B,CACA,IAAMA,EAAIpC,OAAA2K,EAAA,EAAA3K,CAAA,GAAOqD,EAAKxB,MAAMO,MAC5BA,EAAK+D,EAAGC,OAAOK,MAAQN,EAAGC,OAAOpD,MACjCK,EAAKC,SAAS,CAAElB,KAAMA,QAO9BwI,eAAiB,SAACzE,GACA,UAAXA,EAAG+B,KACF7E,EAAKwH,sBAIbA,iBAAmB,WACf,IAAMzG,EAAQf,EAAKxB,MAAMO,KAAK0H,UACxBgB,EAAWzH,EAAKxB,MAAMO,KAAK2H,aACpBjL,SACQiM,2BAA2B3G,EAAO0G,GAC/CpH,MAAM,SAAAsH,GACV3K,QAAQC,IAAI0K,EAAEC,SACd5H,EAAKC,SAAS,CAACuG,aAAcmB,EAAEC,gGAlGnCnM,SAAgB2I,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZrH,QAAQC,IAAIoH,GAEZP,OAAOS,SAASC,KADJ,aAIZxH,QAAQC,IAAI,mBASpBwG,KAAKxD,SAAS,CACVlB,KANS,CACT0H,UAAW,gBACXC,aAAc,+CAyFd,IAAAvC,EAAAV,KACA+C,EAAe,GAChB/C,KAAKjF,MAAMgI,eACVA,EAAerK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAamH,KAAKjF,MAAMgI,eAGxD,IAAMqB,EAAO1L,EAAAC,EAAAC,cAAA,YACTF,EAAAC,EAAAC,cAACyL,EAAD,CACInK,UAAU,QACVJ,KAAK,OACLK,MAAM,QACN+B,MAAO8D,KAAKjF,MAAMO,KAAK0H,UACvBrD,KAAK,YACLqC,GAAG,YACHR,SAAUxB,KAAKkD,aACfoB,WAAYtE,KAAK8D,eACjBS,WAAS,IAEb7L,EAAAC,EAAAC,cAACyL,EAAD,CACInK,UAAU,QACVJ,KAAK,WACLK,MAAM,WACN+B,MAAO8D,KAAKjF,MAAMO,KAAK2H,aACvBtD,KAAK,eACLqC,GAAG,eACHR,SAAUxB,KAAKkD,aACfoB,WAAYtE,KAAK8D,iBAEpBf,EACDrK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACiB,EAAD,CAAQZ,MAAM,UAAUS,QAAS,kBAAIgH,EAAKqD,oBAAoBjK,KAAK,UAAnE,UACApB,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGmI,KAAK,WAAR,cAIhB,OACIrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,qCACCwL,UAzJG3C,aC6KL+C,qNA3KXzJ,MAAQ,CACJgI,aAAc,GACd0B,cAAe,GACfC,aAAc,GACd1B,UAAW,GACXhI,SAAU,GACViI,aAAc,MAiBlB/H,aAAe,WACX3B,QAAQC,IAAI,kBACZ3B,EAAMsD,IAAI,UACLC,KAAK,SAAAC,GACF9B,QAAQC,IAAI,SAAS6B,EAAIC,MACtBD,EAAIC,KAAKN,UAAYK,EAAIC,KAAKN,SAAST,QACtChB,QAAQC,IAAI,cACZ+C,EAAKC,SAAS,CACVxB,SAAUK,EAAIC,KAAKN,SACnB0B,UAAWrB,EAAIC,KAAKoB,UACpBD,UAAU,KAKdF,EAAKC,SAAS,CACVxB,SAAU,GACV0B,UAAWrB,EAAIC,KAAKoB,UACpBD,UAAU,MAIrBG,MAAM,SAAAP,GAAG,OAAE9C,QAAQC,IAAI6C,QAGhC+C,iBAAmB,SAACC,EAAIvF,GACR,UAATA,EACCyC,EAAKC,SAAS,CACVwG,UAAW3D,EAAGC,OAAOpD,QAGd,cAAPpC,EACJyC,EAAKC,SAAS,CACViI,cAAepF,EAAGC,OAAOpD,QAGlB,aAAPpC,EACJyC,EAAKC,SAAS,CACVkI,aAAcrF,EAAGC,OAAOpD,QAGjB,aAAPpC,GACJyC,EAAKC,SAAS,CACVyG,aAAc5D,EAAGC,OAAOpD,WAKpCW,eAAiB,SAACS,EAAOqH,EAAWC,EAAUlI,GAC1C,IAAM1B,EAAWuB,EAAKxB,MAAMC,SAC5BzB,QAAQC,IAAI,qBAAsB+C,EAAKxB,OACvCC,EAASmD,KAAK,CACVwG,UAAWA,EACXC,SAAUA,EACVtH,MAAOA,EACPnB,SAAU,GACVC,cAAe,KAGnB7D,EAASwE,IAAI,yBAAyBC,IAAI,CACtChC,SAAUA,EACV0B,UAAWA,OAInBmI,kBAAoB,WAChB,IAAMvH,EAAQf,EAAKxB,MAAMiI,UACnBgB,EAAWzH,EAAKxB,MAAMkI,aACtB0B,EAAYpI,EAAKxB,MAAM0J,cACvBG,EAAWrI,EAAKxB,MAAM2J,aACtBhI,EAAYH,EAAKxB,MAAM2B,UAE7B,GAAGiI,GAAaC,EAAS,CACrBrI,EAAKM,eAAeS,EAAOqH,EAAWC,EAAUlI,GAEnC1E,SACQ8M,+BAA+BxH,EAAO0G,GACnDpH,MAAM,SAAAsH,GACV3K,QAAQC,IAAI0K,EAAEC,SACd5H,EAAKC,SAAS,CAACuG,aAAcmB,EAAEC,gBAGnC,CAEA5H,EAAKC,SAAS,CACVuG,aAFY,oCAOxBe,eAAiB,SAACzE,GACA,UAAXA,EAAG+B,KACF7E,EAAKsI,wGA1GM,IAAAnE,EAAAV,KACfhI,SAAgB2I,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZrH,QAAQC,IAAIoH,GAEZP,OAAOS,SAASC,KADJ,aAIZxH,QAAQC,IAAI,iBACZkH,EAAKxF,kDAqGT,IAAA8F,EAAAhB,KACA+C,EAAe,KACfqB,EAAO,KA0CX,OAzCGpE,KAAKjF,MAAM0B,WAEPuD,KAAKjF,MAAMgI,eACVA,EAAerK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAamH,KAAKjF,MAAMgI,eAExDqB,EAAO1L,EAAAC,EAAAC,cAAA,YACHF,EAAAC,EAAAC,cAAC2I,EAAD,CACIrH,UAAU,QACVJ,KAAK,OACLK,MAAM,QACNqH,SAAU,SAACnC,GAAD,OAAM2B,EAAK5B,iBAAiBC,EAAI,UAC1CiF,WAAYtE,KAAK8D,iBACrBpL,EAAAC,EAAAC,cAAC2I,EAAD,CACIrH,UAAU,QACVJ,KAAK,OACLK,MAAM,aACNqH,SAAU,SAACnC,GAAD,OAAM2B,EAAK5B,iBAAiBC,EAAI,cAC1CiF,WAAYtE,KAAK8D,iBACrBpL,EAAAC,EAAAC,cAAC2I,EAAD,CACIrH,UAAU,QACVJ,KAAK,OACLK,MAAM,YACNqH,SAAU,SAACnC,GAAD,OAAM2B,EAAK5B,iBAAiBC,EAAI,aAC1CiF,WAAYtE,KAAK8D,iBACrBpL,EAAAC,EAAAC,cAAC2I,EAAD,CACIrH,UAAU,QACVJ,KAAK,WACLK,MAAM,WACNqH,SAAU,SAACnC,GAAD,OAAM2B,EAAK5B,iBAAiBC,EAAI,aAC1CiF,WAAYtE,KAAK8D,iBACpBf,EACDrK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIH,QAAS,kBAAIsH,EAAK6D,qBAClB/K,KAAK,SACLb,MAAM,WAHV,cAURP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVuL,UAtKI3C,cCiINsD,qNA9HXhK,MAAM,CACFC,SAAU,MAyCdE,aAAe,WACXrD,EAAMsD,IAAI,UACLC,KAAK,SAAAC,GAAK,IAAAE,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIP,QAAAC,EAAAC,EAAgBP,EAAIC,KAAKN,SAAzBa,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAA1BU,EAA0BN,EAAAO,MAC1BD,EAAK+I,SACL/I,EAAK+I,OAAS,IAEd/I,EAAKgJ,YACLhJ,EAAKgJ,UAAY,KATlB,MAAA5I,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GAYPlC,QAAQC,IAAI,iBAAkB6B,EAAIC,MAClCiB,EAAKC,SAAS,CACVxB,SAAUK,EAAIC,KAAKN,SACnByB,UAAU,MAGjBG,MAAM,SAAAP,GAAG,OAAE9C,QAAQC,IAAI6C,QAGhC6C,cAAgB,WACZ3F,QAAQC,IAAI,eACZxB,SAAgBmH,aAIpBiB,cAAgB,SAAC9F,GACbf,QAAQC,IAAI,QAASc,GACrB+F,OAAOC,KAAKhG,uFAhDG,IAAAoG,EAAAV,KACfhI,SAAgB2I,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZF,EAAKlE,SAAS,CAAES,WAAY2D,EAAatD,QAE5BtF,SAAgB6I,YAE7BH,EAAKxF,mBAEL,CAEAmF,OAAOS,SAASC,KADJ,IAEZxH,QAAQC,IAAI,qDAuChB,IAAAwH,EAAAhB,KACAiB,EAAO,KAEX,GAAGjB,KAAKjF,MAAM0B,SAAS,CACnBlD,QAAQC,IAAI,yBAA0BwG,KAAKjF,OAC3C,IAAMC,EAAQ9B,OAAA4D,EAAA,EAAA5D,CAAO8G,KAAKjF,MAAMC,UAC1BiC,EAAa+C,KAAKjF,MAAMkC,WAC9B1D,QAAQC,IAAI,eAAgByD,GAC5B,IAAME,EAAYnC,EAASoC,UAAU,SAAAC,GACjC,OAAOA,EAAIC,QAAUL,IAEnB4D,EAAc7F,EAASmC,GAC7B5D,QAAQC,IAAI,gBAAiBqH,GAGzBI,EADDJ,EAAY1E,UAAY0E,EAAY1E,SAAS5B,OACrCsG,EAAY1E,SAAS+E,IAAI,SAAC9G,GAC7B,OAAO1B,EAAAC,EAAAC,cAACuI,EAAD,CACHvH,MAAOQ,EAAIR,MACXe,SAAUP,EAAIO,SACdL,OAAQF,EAAIE,OACZ8G,IAAKhH,EAAIwE,MACT/D,gBAAiBmG,EAAKZ,cAAcF,KAAKc,EAAM5G,EAAIE,YAIpD5B,EAAAC,EAAAC,cAAA,yCAIf,OACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAACyI,EAAD,KACI3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGmI,KAAK,SAAR,QACArI,EAAAC,EAAAC,cAAA,KAAGmI,KAAK,cAAR,mBAEJrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNS,QAASsG,KAAKd,eAFlB,aAKRxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVoI,WAxHFQ,cCkHJyD,qNAjHXnK,MAAM,KAsBNG,aAAe,WACXrD,EAAMsD,IAAI,UACLC,KAAK,SAAAC,GACF9B,QAAQC,IAAI,SAAS6B,EAAIC,MADlB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIP,QAAAC,EAAAC,EAAgBP,EAAIC,KAAKN,SAAzBa,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAA1BU,EAA0BN,EAAAO,MAC1BD,EAAKE,WACLF,EAAKE,SAAW,IAEhBF,EAAKG,gBACLH,EAAKG,cAAgB,KATtB,MAAAC,GAAAb,GAAA,EAAAC,EAAAY,EAAA,YAAAd,GAAA,MAAAK,EAAAU,QAAAV,EAAAU,SAAA,WAAAd,EAAA,MAAAC,GAYPlC,QAAQC,IAAI,iBAAkB6B,EAAIC,MAClCiB,EAAKC,SAAS,CACVxB,SAAUK,EAAIC,KAAKN,SACnByB,UAAU,EACVC,UAAWrB,EAAIC,KAAKoB,YAExBH,EAAK4I,0BAERvI,MAAM,SAAAP,GAAG,OAAE9C,QAAQC,IAAI6C,QAGhC6C,cAAgB,WACZ3F,QAAQC,IAAI,eACZxB,SAAgBmH,aAGpBgG,sBAAwB,WACpB,IAAMnK,EAAQ9B,OAAA4D,EAAA,EAAA5D,CAAOqD,EAAKxB,MAAMC,UAC1BiC,EAAaV,EAAKxB,MAAMkC,WAC9B1D,QAAQC,IAAI,eAAgByD,GAC5B1D,QAAQC,IAAI,aAAcwB,GAC1B,IAAMmC,EAAYnC,EAASoC,UAAU,SAAAC,GACjC,OAAOA,EAAIC,QAAUL,IAEnBb,EAAgBpB,EAASmC,GAAWf,cAC1C7C,QAAQC,IAAI,kBAAmB4C,GAC/BG,EAAKC,SAAS,CAACJ,cAAeA,OAIlCgE,cAAgB,SAAC9F,GACbf,QAAQC,IAAI,QAASc,GACrB+F,OAAOC,KAAKhG,uFAhEG,IAAAoG,EAAAV,KACfzG,QAAQC,IAAI,uBACZxB,SAAgB2I,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZF,EAAKlE,SAAS,CAAES,WAAY2D,EAAatD,QAE5BtF,SAAgB6I,YAE7BH,EAAKxF,mBAEL,CAEAmF,OAAOS,SAASC,KADJ,IAEZxH,QAAQC,IAAI,qDAsDhB,IAAAwH,EAAAhB,KACAiB,EAAO,KAoBX,OAnBGjB,KAAKjF,MAAM0B,WAEPuD,KAAKjF,MAAMqB,eAAiB4D,KAAKjF,MAAMqB,cAAc7B,QACpDhB,QAAQC,IAAI,UACZyH,EAAOjB,KAAKjF,MAAMqB,cAAc8E,IAAI,SAAA9G,GAChC,OAAO1B,EAAAC,EAAAC,cAACuI,EAAD,CACHvH,MAAOQ,EAAIR,MACXe,SAAUP,EAAIO,SACdL,OAAQF,EAAIE,OACZ8G,IAAKhH,EAAIwE,MACT/D,gBAAiBmG,EAAKZ,cAAcF,KAAKc,EAAM5G,EAAIE,cAI3Df,QAAQC,IAAI,SACZyH,EAAOvI,EAAAC,EAAAC,cAAA,2CAKXF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACyI,EAAD,KACI3I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGmI,KAAK,SAAR,QACArI,EAAAC,EAAAC,cAAA,KAAGmI,KAAK,SAAR,cAEJrI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNS,QAASsG,KAAKd,eAFlB,aAKRxG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVoI,WA3GOQ,cCiBb2D,mLAdX,OACI1M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,KACI3M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAW3K,IACrCpC,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW3C,IACjCpK,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAWC,IACvChN,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAWV,IACrCrM,EAAAC,EAAAC,cAAC0M,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWP,aAVxCzD,aCEEkE,QACW,cAA7BtF,OAAOS,SAAS8E,UAEe,UAA7BvF,OAAOS,SAAS8E,UAEhBvF,OAAOS,SAAS8E,SAASC,MACvB,2DCZNC,IAASC,OAAOrN,EAAAC,EAAAC,cAACoN,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjL,KAAK,SAAAkL,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.792f7453.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://trainscheduler-d3a50.firebaseio.com/-KsvSXlLmZRq_i-pAUhx'\r\n});\r\n\r\nexport default instance;","import * as firebase from \"firebase\";\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyA-143MQQsB75aYzr2-JV4eeFi_j60Z9_Q\",\r\n    authDomain: \"trainscheduler-d3a50.firebaseapp.com\",\r\n    databaseURL: \"https://trainscheduler-d3a50.firebaseio.com\",\r\n    projectId: \"trainscheduler-d3a50\",\r\n    storageBucket: \"trainscheduler-d3a50.appspot.com\",\r\n    messagingSenderId: \"13218449554\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nconst database = firebase.database();\r\n\r\nexport {database};","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst navbar = (props) =>{\r\n    return (\r\n        <div className='Navbar'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navbar;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst button = (props) =>{\r\n\r\n    let btnClass = '';\r\n    if(props.color === 'primary'){\r\n        btnClass='btn btn-primary';\r\n    }\r\n    else if(props.color === 'danger'){\r\n        btnClass = 'btn danger';\r\n    }\r\n    else{\r\n        btnClass = 'btn';\r\n    }\r\n\r\n    return(\r\n        <div className='Button'>\r\n            <button disabled={props.disabled} className={btnClass} {...props}>{props.children}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport './Modal.css';\r\n\r\nimport Button from '../Button/Button';\r\n\r\nconst modal = (props) =>{\r\n\r\n    // console.log('props: ', props);\r\n    if(!props.showModal){\r\n        return null;\r\n    }\r\n    console.log('canSavebutton: ', props.canSaveButton);\r\n    console.log('showmodal: ', props.showModal);\r\n\r\n    return (\r\n        <div className='Modal'>\r\n            <div className='container'>\r\n                <span onClick={props.onCloseBtnClicked} className='close'>&times;</span>\r\n                <div className='header'>\r\n                    {props.title}\r\n                </div>\r\n\r\n                <div className=\"body\">\r\n                    {props.children}\r\n                </div>\r\n\r\n                <div className='footer'>\r\n                    <Button\r\n                        color='primary'\r\n                        type='button'\r\n                        onClick={props.onSaveBtnClicked}\r\n                        disabled={props.canSaveButton}\r\n                    >Create</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default modal;","import React from 'react';\r\nimport './Input.css';\r\n\r\nconst input = (props) =>{\r\n    let inputElement = null;\r\n\r\n    if(props.inputtype === 'input' && props.type === 'text'){\r\n        inputElement = <input className='inputElement' {...props}/>;\r\n    }\r\n    else if(props.inputtype === 'textarea'){\r\n        inputElement = <textarea className='inputElement' {...props}/>;\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'file'){\r\n        inputElement = <input className='' {...props}/>\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'password'){\r\n        inputElement = <input className='inputElement' {...props}/>;\r\n    }\r\n\r\n    return (\r\n        <div className='Input'>\r\n            <label>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;\r\n","import React from 'react';\r\nimport './Pin.css';\r\nimport Button from '../Button/Button';\r\n\r\nconst pin = (props) =>{\r\n\r\n    const style = {\r\n        // backgroundImage: `url(${props.imageUrl})`,\r\n    }\r\n\r\n    // check if we need button\r\n    let button = '';\r\n    if(props.onPinSaveButtonClicked){\r\n        button = <Button onClick={props.onPinSaveButtonClicked} className='btn btn-danger'>Save</Button>;\r\n    }\r\n\r\n    // truncate webUrl\r\n    let webUrl = '';\r\n    if(props.webUrl){\r\n        if(props.webUrl.length > 20){\r\n            webUrl = props.webUrl.substring(0, 20)+'...';\r\n        }\r\n        else{\r\n            webUrl = props.webUrl;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='Pin' style={style}>\r\n            <img src={props.imageUrl} alt=\"image\"/>\r\n            {button}\r\n            <span onClick={props.onWebUrlClicked} className=\"caption\">&nbsp;{webUrl}&nbsp;</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default pin;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport * as firebase from 'firebase';\r\nimport axios from '../../axios';\r\nimport {database} from \"../../firebase\";\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Input from '../../components/Input/Input';\r\nimport Button from '../../components/Button/Button';\r\nimport Pin from '../../components/Pin/Pin';\r\nimport sampleImg from '../../assets/Swan_large_1450932169.jpg';\r\n\r\nclass Home extends Component {\r\n    state={\r\n        allUsers: [\r\n            // {\r\n            //     email: 'jin@nieblo.com',\r\n            //     firstName: 'Jin',\r\n            //     lastName: 'Redmond',\r\n            //     yourPins: [],\r\n            //     followingPins: []\r\n            // }\r\n        ],\r\n        allPins: [\r\n            // {\r\n            //     title: 'test title1',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'https://www.google.com/',\r\n            //     pinId: 0,\r\n            // },\r\n            // {\r\n            //     title: 'test title2',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'weburl2.com',\r\n            //     pinId: 11,\r\n            // },\r\n            // {\r\n            //     title: 'test title3',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'weburl3.com',\r\n            //     pinId: 22,\r\n            // },\r\n            // {\r\n            //     title: 'test title4',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'weburl4.com',\r\n            //     pinId: 33,\r\n            // },\r\n            // {\r\n            //     title: 'test title5',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'weburl5.com',\r\n            //     pinId: 44,\r\n            // },\r\n        ],\r\n        showModal: false,\r\n        canSaveButton: false,\r\n    };\r\n\r\n    componentDidMount(){\r\n        console.log('component did mount');\r\n        firebase.auth().onAuthStateChanged(firebaseUser =>{\r\n            if(firebaseUser){\r\n                this.setState({ loginEmail: firebaseUser.email });\r\n\r\n                const user = firebase.auth().currentUser;\r\n                // console.log('current user: ', user);\r\n                this.loadDatabase();\r\n            }\r\n            else{\r\n                const url = '/';\r\n                window.location.href = url;\r\n                console.log('not logged in');\r\n            }\r\n        });\r\n    }\r\n\r\n    loadDatabase = () =>{\r\n        axios.get('/.json')\r\n            .then(res=>{\r\n                console.log('load: ',res.data);\r\n\r\n                // firebase won't store empty array, so create empty array here\r\n                for(let user of res.data.allUsers){\r\n                    if(!user.yourPins){\r\n                        user.yourPins = [];\r\n                    }\r\n                    if(!user.followingPins){\r\n                        user.followingPins = [];\r\n                    }\r\n                }\r\n                console.log('new res.data: ', res.data);\r\n                this.setState({\r\n                    allUsers: res.data.allUsers,\r\n                    dbLoaded: true,\r\n                    lastPinId: res.data.lastPinId,\r\n                });\r\n                this.setStateAllPins();\r\n            })\r\n            .catch(err=>console.log(err));\r\n    };\r\n\r\n    updateDatabase = (allUsers) =>{\r\n        console.log('updatemethod: ', this.state.allUsers);\r\n        console.log('pass allusers:', allUsers);\r\n\r\n        const data = [...this.state.allUsers];\r\n        const lastPinId = this.state.lastPinId;\r\n        database.ref(\"-KsvSXlLmZRq_i-pAUhx\").set({\r\n            allUsers: data,\r\n            lastPinId: lastPinId,\r\n        });\r\n    }\r\n\r\n    setStateAllPins = () =>{\r\n        const loginEmail = this.state.loginEmail;\r\n        // console.log('loginEmail: ', loginEmail);\r\n        const allUsers = [...this.state.allUsers];\r\n        // console.log('allusers: ', allUsers);\r\n\r\n        // get all pins except your own and following pins\r\n        const copyAllUsers = [...this.state.allUsers];\r\n        // console.log('copyallusers: ', copyAllUsers);\r\n\r\n        const userIndex = copyAllUsers.findIndex(val=>{\r\n            return val.email === loginEmail;\r\n        });\r\n        // console.log('userindex: ', userIndex);\r\n        // console.log('copytallusers: ', copyAllUsers);\r\n        copyAllUsers.splice(userIndex, 1);\r\n        // console.log('copyAllUsers: ', copyAllUsers);\r\n        const pinsToDisplayWithFollowingPins = [];\r\n        for(let user of copyAllUsers){\r\n            for(let pin of user.yourPins){\r\n                pinsToDisplayWithFollowingPins.push(pin);\r\n            }\r\n        }\r\n\r\n        console.log('pinsToDisplayWithFollowingPins: ',pinsToDisplayWithFollowingPins);\r\n        // console.log('allusers', allUsers[userIndex]);\r\n        // minus your following pins\r\n        const yourFollowingPins = allUsers[userIndex].followingPins;\r\n        // console.log('yourFollowingPins: ', yourFollowingPins);\r\n        const indexes = [];\r\n\r\n        // use remove multi items from array method\r\n        if(yourFollowingPins.length){\r\n            for(let remVal of yourFollowingPins){\r\n                indexes.push(pinsToDisplayWithFollowingPins.findIndex(function(val){\r\n                    return val.pinId === remVal.pinId;\r\n                }));\r\n            }\r\n\r\n            // console.log('remove index: ', indexes);\r\n\r\n            // sort indexes array\r\n            const sortedIndexes = indexes.sort(function(a, b){ return a - b});\r\n            // console.log('sorted index: ', sortedIndexes);\r\n\r\n            for(let i=sortedIndexes.length-1; i>=0; i--){\r\n                pinsToDisplayWithFollowingPins.splice(sortedIndexes[i], 1);\r\n            }\r\n\r\n            // console.log('new pinsto display: ', pinsToDisplayWithFollowingPins);\r\n\r\n        }\r\n\r\n        this.setState({allPins: pinsToDisplayWithFollowingPins});\r\n    }\r\n\r\n    logOutHandler = () =>{\r\n        console.log('logging out');\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    inputTextHandler = (ev, type) =>{\r\n        if(type === 'title'){\r\n            this.setState({title: ev.target.value})\r\n        }\r\n        else if(type === 'webUrl'){\r\n            this.setState({webUrl: ev.target.value});\r\n        }\r\n        else if(type === 'file'){\r\n            this.setState({imageUrl: ev.target.files[0]});\r\n        }\r\n    };\r\n\r\n    // modal handlers----------------------------------------\r\n    createPinHandler = (email) =>{\r\n        // console.log('create pin state: ', this.state);\r\n        if(this.state.title && this.state.imageUrl && this.state.webUrl){\r\n            const newPin = {};\r\n            newPin.title = this.state.title;\r\n            newPin.imageUrl = this.state.imageUrl;\r\n            newPin.webUrl = this.state.webUrl;\r\n\r\n            let lastPinId = this.state.lastPinId;\r\n            console.log('last id: ', lastPinId);\r\n            newPin.pinId = lastPinId+1;\r\n            console.log('++: ', newPin.pinId);\r\n\r\n            // disable save button\r\n            // update count\r\n            this.setState({\r\n                canSaveButton: true,\r\n                lastPinId: newPin.pinId,\r\n            });\r\n\r\n            // get the fle\r\n            const file = this.state.imageUrl;\r\n\r\n            // create a storage ref\r\n            const storageRef = firebase.storage().ref('uploadedImgFolder/' + file.name);\r\n\r\n            // upload file. Update state and db when finish\r\n            storageRef.put(file).then(function(){\r\n                // get the img url\r\n                const storage = firebase.storage().ref();\r\n                storage.child('uploadedImgFolder/'+file.name).getDownloadURL().then(function(url){\r\n                    console.log('url: ', url);\r\n                    newPin.imageUrl = url;\r\n                    // newPin.imageUrl = 'test url';\r\n\r\n                    // console.log('email: ', email);\r\n                    const allUsers = [...this.state.allUsers];\r\n                    console.log(\"-----\", allUsers);\r\n                    const userIndex = allUsers.findIndex(val=>{\r\n                        return val.email === email;\r\n                    });\r\n                    console.log('----', userIndex);\r\n                    allUsers[userIndex].yourPins.push(newPin);\r\n                    this.closeModalHandler();\r\n\r\n                    this.updateDatabase(allUsers);\r\n\r\n                    // enable save button\r\n                    this.setState({\r\n                        canSaveButton: false,\r\n                        title: '',\r\n                        webUrl: '',\r\n                        imageUrl: '',\r\n                    })\r\n                }.bind(this));\r\n            }.bind(this));\r\n        }\r\n    };\r\n\r\n    showModal = () =>{\r\n        this.setState({showModal: true});\r\n    };\r\n    closeModalHandler = () =>{\r\n        this.setState({showModal: false});\r\n    };\r\n\r\n    // pin handlers-------------------------------------------\r\n    webUrlHandler = (webUrl) =>{\r\n        console.log('url: ', webUrl);\r\n        window.open(webUrl);\r\n    };\r\n\r\n    savePinHandler = (pinId) =>{\r\n        console.log('pinId: ', pinId);\r\n        const allPins = [...this.state.allPins];\r\n        // console.log('allpins: ', allPins);\r\n        const indexOfPin = allPins.findIndex(val=>{\r\n            return val.pinId === pinId;\r\n        });\r\n\r\n        // console.log('index', indexOfPin);\r\n        const loginEmail = this.state.loginEmail;\r\n        const allUsers = [...this.state.allUsers];\r\n        const indexOfUser = allUsers.findIndex(val=>{\r\n            return val.email === loginEmail;\r\n        });\r\n        // console.log('indexofuser: ', indexOfUser);\r\n\r\n        allUsers[indexOfUser].followingPins.push(allPins[indexOfPin]);\r\n\r\n        this.setState({\r\n            allUsers: allUsers\r\n        });\r\n\r\n        console.log(this.state);\r\n        this.updateDatabase();\r\n\r\n        this.setStateAllPins();\r\n    };\r\n\r\n    render(){\r\n        let pins = null;\r\n        if(this.state.dbLoaded){\r\n            console.log(\"===============================\",this.state);\r\n            if(this.state.allPins && this.state.allPins.length){\r\n                pins = this.state.allPins.map(pin=>{\r\n                    return <Pin\r\n                        title={pin.title}\r\n                        imageUrl={pin.imageUrl}\r\n                        webUrl={pin.webUrl}\r\n                        key={pin.pinId}\r\n                        onWebUrlClicked={this.webUrlHandler.bind(this, pin.webUrl)}\r\n                        onPinSaveButtonClicked={this.savePinHandler.bind(this, pin.pinId)}/>\r\n                });\r\n            }\r\n            else{\r\n                pins = <p>There are no pins to display</p>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='Home'>\r\n                <Navbar>\r\n                    <div className='leftContainer'>\r\n                        <a href=\"/home\">Home</a>\r\n                        <a href=\"/pins\">your pins</a>\r\n                        <a href=\"/following\">following pins</a>\r\n                    </div>\r\n                    <div className=\"rightContainer\">\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={this.showModal}>create pin</Button>\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={this.logOutHandler}>Log out</Button>\r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Modal\r\n                    title='Create your pin'\r\n                    onSaveBtnClicked={this.createPinHandler.bind(this, this.state.loginEmail)}\r\n                    onCloseBtnClicked={this.closeModalHandler}\r\n                    showModal={this.state.showModal}\r\n                    canSaveButton={this.state.canSaveButton}\r\n                >\r\n                    <div className=\"bodyContainer\">\r\n                        <Input\r\n                            inputtype='input'\r\n                            type='text'\r\n                            label='Add a title'\r\n                            onChange={(ev)=>this.inputTextHandler(ev, 'title')}/>\r\n                        <br/>\r\n                        <Input\r\n                            inputtype='input'\r\n                            type='text'\r\n                            label='Type a website url'\r\n                            onChange={(ev)=>this.inputTextHandler(ev, 'webUrl')}/>\r\n                        <br/>\r\n                        <Input\r\n                            inputtype='input'\r\n                            type='file'\r\n                            label='upload file'\r\n                            onChange={(ev)=>this.inputTextHandler(ev, 'file')}/>\r\n                    </div>\r\n                </Modal>\r\n                <div className='pinsContainer'>\r\n                    {pins}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","\r\nimport React from 'react';\r\nimport './Input2.css';\r\n\r\nconst input2 = (props) =>{\r\n    let labelElement = null;\r\n    let inputElement = null;\r\n    let styleLabel = 'styleLabel';\r\n    let styleLabelForCheckbox = 'checkBoxContainer';\r\n\r\n    if(props.req){\r\n        styleLabel += ' req';\r\n        styleLabelForCheckbox += ' req';\r\n    }\r\n\r\n    if(props.inputtype === 'input' && props.type === 'text'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <input className='inputText' {...props}/>;\r\n    }\r\n\r\n    else if(props.inputtype === 'input' && props.type === 'password'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <input className='inputText' {...props}/>;\r\n    }\r\n    else if(props.inputtype === 'textarea'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <textarea className='inputText' {...props}/>;\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'file'){\r\n        // labelElement =  <label htmlFor={props.id}>{props.label}</label>;\r\n        // inputElement = <input className='' {...props}/>\r\n        let fileLabelSpan = props.filelabelspan;\r\n        let fileLabel = props.filelabel;\r\n        let spanText = props.label;\r\n        if(props.filelabelspan){\r\n            spanText = null;\r\n            fileLabel = null;\r\n        }\r\n        else if(props.filelabel){\r\n            spanText = null;\r\n            fileLabelSpan = null;\r\n        }\r\n        inputElement = <div>\r\n                        <input {...props} className=\"inputfile\"\r\n                               data-multiple-caption=\"{count} files selected\"/>\r\n                        <label htmlFor={props.id}><span>{fileLabelSpan}{fileLabel}{spanText}</span></label>\r\n                    </div>\r\n    }\r\n    else if(props.inputtype === 'select'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <select className='inputSelect' {...props}>\r\n            {props.options.map(option=>{\r\n                return <option key={option.value} value={option.value}>{option.displayValue}</option>;\r\n            })}\r\n        </select>\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'radio'){\r\n        // inputElement = props.options.map(option=>{\r\n        //     return <label key={option.value} htmlFor={option.id}>\r\n        //             <input className='' {...props} value={option.value} id={option.id} name={props.name} checked={option.value === props.selected}/>{option.label}\r\n        //         </label>;\r\n        // })\r\n        inputElement = <div className='disp-flex'>\r\n                        {props.options.map(option=>{\r\n                            return <React.Fragment key={option.id}>\r\n                                <input {...props} type={props.type} className=\"buttonLikeRadio buttonLikeRadio-insurance_y_n\" id={option.id} name={props.name} value={option.value} checked={option.value === props.selected}/>\r\n                                <label className=\"round-border width100\" htmlFor={option.id}>{option.label}</label>\r\n                            </React.Fragment>\r\n                        })}\r\n                    </div>\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'checkbox'){\r\n        // inputElement = <label>\r\n        //                 <input className='' {...props}/>{props.label}\r\n        //             </label>;\r\n        inputElement = <div>\r\n                        <label className={styleLabelForCheckbox} htmlFor={props.name}>{props.label}\r\n                        <input {...props} checked={!!props.ischecked}/>\r\n                                <span className=\"checkmark\"></span>\r\n                        </label>\r\n                    </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Input'>\r\n            {labelElement}\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input2;","import React, {Component} from 'react';\r\nimport './Login.css';\r\nimport * as firebase from 'firebase';\r\n\r\nimport Input2 from '../../components/Input2/Input2';\r\nimport Button from '../../components/Button/Button';\r\n\r\nclass Login extends Component{\r\n    state={\r\n        errorMessage: '',\r\n        data : {\r\n            emailText : \"\",\r\n            passwordText: \"\",\r\n        }\r\n        // emailText: '',\r\n        // passwordText: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged(firebaseUser =>{\r\n            if(firebaseUser){\r\n                console.log(firebaseUser);\r\n                const url = '/home';\r\n                window.location.href = url;\r\n            }\r\n            else{\r\n                console.log('not logged in');\r\n            }\r\n        });\r\n\r\n        const data = {\r\n            emailText: \"demo@demo.com\",\r\n            passwordText: \"password\"\r\n        }\r\n\r\n        this.setState({\r\n            data: data\r\n        });\r\n    }\r\n\r\n    // inputTextHandler = (ev, type) =>{\r\n    //     if(type === 'email'){\r\n    //         this.setState({ emailText: ev.target.value});\r\n    //     }\r\n    //     else {\r\n    //         this.setState({ passwordText: ev.target.value});\r\n    //     }\r\n    // };\r\n\r\n    inputHandler = (ev) =>{\r\n        console.log('type: ', ev.target.type);\r\n        if(ev.target.type && ev.target.type === 'file'){\r\n            // display file name when file was selected\r\n            const label = ev.target.nextElementSibling;\r\n            const labelVal = label.innerHTML;\r\n\r\n            let fileName = '';\r\n            if(ev.target.files && ev.target.files.length > 1){\r\n                fileName = (ev.target.getAttribute('data-multiple.caption') || '').replace('{count}', ev.target.files.length);\r\n            }\r\n            else{\r\n                fileName = ev.target.value.split('\\\\').pop();\r\n            }\r\n\r\n            if(fileName){\r\n                const span = ev.target.name +1;\r\n                console.log('span state: ', span);\r\n                this.setState({ [span]: fileName });\r\n            }\r\n            else{\r\n                const label = ev.target.name +2;\r\n                this.setState({[label]:labelVal});\r\n            }\r\n\r\n            // cannot upload file because of 'fakepath'\r\n            // console.log('target vleu: ', ev.target.value);\r\n\r\n            // code to save file (see insurance_form.blade.php)\r\n            // todo: save file using formData\r\n\r\n        }\r\n        else if(ev.target.type && ev.target.type === 'checkbox'){\r\n            console.log('chiecked? ', ev.target.checked);\r\n            if(ev.target.checked){\r\n                const data = {...this.state.data};\r\n                data[ev.target.name] = ev.target.value;\r\n                this.setState({ data : data });\r\n            }\r\n            else{\r\n                const data = {...this.state.data};\r\n                data[ev.target.name] = '';\r\n                this.setState({ data: data});\r\n            }\r\n        }\r\n        else{\r\n            const data = {...this.state.data};\r\n            data[ev.target.name] = ev.target.value;\r\n            this.setState({ data: data });\r\n        }\r\n        // console.log('state: ', this.state);\r\n        // console.log('value: ', ev.target.value);\r\n        // console.log('check: ', ev.target.checked);\r\n    }\r\n\r\n    handleKeyPress = (ev) =>{\r\n        if(ev.key === 'Enter'){\r\n            this.formLoginHandler();\r\n        }\r\n    }\r\n\r\n    formLoginHandler = () =>{\r\n        const email = this.state.data.emailText;\r\n        const password = this.state.data.passwordText;\r\n        const auth = firebase.auth();\r\n        const promise = auth.signInWithEmailAndPassword(email, password);\r\n        promise.catch(e=>{\r\n            console.log(e.message);\r\n            this.setState({errorMessage: e.message});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let errorMessage = '';\r\n        if(this.state.errorMessage){\r\n            errorMessage = <p className='errorText'>{this.state.errorMessage}</p>;\r\n        }\r\n\r\n        const form = <form>\r\n            <Input2\r\n                inputtype='input'\r\n                type='text'\r\n                label='Email'\r\n                value={this.state.data.emailText}\r\n                name=\"emailText\"\r\n                id=\"emailText\"\r\n                onChange={this.inputHandler}\r\n                onKeyPress={this.handleKeyPress}\r\n                autoFocus\r\n            />\r\n            <Input2\r\n                inputtype='input'\r\n                type='password'\r\n                label='Password'\r\n                value={this.state.data.passwordText}\r\n                name=\"passwordText\"\r\n                id=\"passwordText\"\r\n                onChange={this.inputHandler}\r\n                onKeyPress={this.handleKeyPress}\r\n            />\r\n            {errorMessage}\r\n            <div className='buttonContainer'>\r\n                <Button color='primary' onClick={()=>this.formLoginHandler()} type='button'>Log In</Button>\r\n                <div>or</div>\r\n                <strong><a href=\"/signup\">Sing Up</a></strong>\r\n            </div>\r\n        </form>\r\n\r\n        return (\r\n            <div className='Login'>\r\n                <h1>Login or Create Account</h1>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport './Signup.css';\r\nimport * as firebase from 'firebase';\r\nimport {database} from '../../firebase';\r\nimport axios from '../../axios';\r\nimport Input from '../../components/Input/Input';\r\nimport Button from '../../components/Button/Button';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        errorMessage: '',\r\n        firstNameText: '',\r\n        lastNameText: '',\r\n        emailText: '',\r\n        allUsers: [],\r\n        passwordText: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged(firebaseUser=>{\r\n            if(firebaseUser){\r\n                console.log(firebaseUser);\r\n                const url = '/home';\r\n                window.location.href = url;\r\n            }\r\n            else{\r\n                console.log('not looged in');\r\n                this.loadDatabase();\r\n            }\r\n        })\r\n    }\r\n\r\n    loadDatabase = () =>{\r\n        console.log('load db method');\r\n        axios.get('/.json')\r\n            .then(res=>{\r\n                console.log('load: ',res.data);\r\n                if(res.data.allUsers && res.data.allUsers.length){\r\n                    console.log('yes length');\r\n                    this.setState({\r\n                        allUsers: res.data.allUsers,\r\n                        lastPinId: res.data.lastPinId,\r\n                        dbLoaded: true,\r\n                    });\r\n                }\r\n                else{\r\n                    // console.log('no length');\r\n                    this.setState({\r\n                        allUsers: [],\r\n                        lastPinId: res.data.lastPinId,\r\n                        dbLoaded: true,\r\n                    });\r\n                }\r\n            })\r\n            .catch(err=>console.log(err));\r\n    }\r\n\r\n    inputTextHandler = (ev, type) =>{\r\n        if(type === 'email'){\r\n            this.setState({\r\n                emailText: ev.target.value\r\n            });\r\n        }\r\n        else if(type==='firstName'){\r\n            this.setState({\r\n                firstNameText: ev.target.value\r\n            });\r\n        }\r\n        else if(type==='lastName'){\r\n            this.setState({\r\n                lastNameText: ev.target.value\r\n            });\r\n        }\r\n        else if(type==='password'){\r\n            this.setState({\r\n                passwordText: ev.target.value\r\n            });\r\n        }\r\n    };\r\n\r\n    updateDatabase = (email, firstName, lastName, lastPinId) =>{\r\n        const allUsers = this.state.allUsers;\r\n        console.log(\"==================\", this.state);\r\n        allUsers.push({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            yourPins: [],\r\n            followingPins: [],\r\n        });\r\n\r\n        database.ref('-KsvSXlLmZRq_i-pAUhx/').set({\r\n            allUsers: allUsers,\r\n            lastPinId: lastPinId,\r\n        });\r\n    }\r\n\r\n    formSignupHandler = () =>{\r\n        const email = this.state.emailText;\r\n        const password = this.state.passwordText;\r\n        const firstName = this.state.firstNameText;\r\n        const lastName = this.state.lastNameText;\r\n        const lastPinId = this.state.lastPinId;\r\n\r\n        if(firstName && lastName){\r\n            this.updateDatabase(email, firstName, lastName, lastPinId);\r\n\r\n            const auth = firebase.auth();\r\n            const promise = auth.createUserWithEmailAndPassword(email, password);\r\n            promise.catch(e=>{\r\n                console.log(e.message);\r\n                this.setState({errorMessage: e.message});\r\n            });\r\n        }\r\n        else{\r\n            const message = 'Please fill out all fields.';\r\n            this.setState({\r\n                errorMessage: message\r\n            })\r\n        }\r\n    }\r\n\r\n    handleKeyPress = (ev) =>{\r\n        if(ev.key === 'Enter'){\r\n            this.formSignupHandler();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let errorMessage = null;\r\n        let form = null;\r\n        if(this.state.dbLoaded){\r\n\r\n            if(this.state.errorMessage){\r\n                errorMessage = <p className='errorText'>{this.state.errorMessage}</p>;\r\n            }\r\n            form = <form>\r\n                <Input\r\n                    inputtype='input'\r\n                    type='text'\r\n                    label='Email'\r\n                    onChange={(ev)=>this.inputTextHandler(ev, 'email')}\r\n                    onKeyPress={this.handleKeyPress}/>\r\n                <Input\r\n                    inputtype='input'\r\n                    type='text'\r\n                    label='First name'\r\n                    onChange={(ev)=>this.inputTextHandler(ev, 'firstName')}\r\n                    onKeyPress={this.handleKeyPress}/>\r\n                <Input\r\n                    inputtype='input'\r\n                    type='text'\r\n                    label='Last name'\r\n                    onChange={(ev)=>this.inputTextHandler(ev, 'lastName')}\r\n                    onKeyPress={this.handleKeyPress}/>\r\n                <Input\r\n                    inputtype='input'\r\n                    type='password'\r\n                    label='Password'\r\n                    onChange={(ev)=>this.inputTextHandler(ev, 'password')}\r\n                    onKeyPress={this.handleKeyPress}/>\r\n                {errorMessage}\r\n                <div className='buttonContainer'>\r\n                    <Button\r\n                        onClick={()=>this.formSignupHandler()}\r\n                        type='button'\r\n                        color='primary'\r\n                    >Sign Up</Button>\r\n                </div>\r\n            </form>;\r\n        }\r\n\r\n        return (\r\n            <div className='Signup'>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport './Pins.css';\r\nimport * as firebase from 'firebase';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Pin from \"../../components/Pin/Pin\";\r\nimport sampleImg from \"../../assets/Swan_large_1450932169.jpg\";\r\nimport axios from \"../../axios\";\r\nimport Button from \"../../components/Button/Button\";\r\n\r\nclass Pins extends Component{\r\n    state={\r\n        allUsers: [\r\n            // {\r\n            //     email: 'jin@nieblo.com',\r\n            //     firstName: 'Jin',\r\n            //     lastName: 'Redmond',\r\n            //     yourPins: [\r\n            //         {\r\n            //             title: 'test title1',\r\n            //             imageUrl: sampleImg,\r\n            //             webUrl: 'https://www.google.com/',\r\n            //             pinId: 0,\r\n            //         },\r\n            //         {\r\n            //             title: 'test title2',\r\n            //             imageUrl: sampleImg,\r\n            //             webUrl: 'weburl2.com',\r\n            //             pinId: 11,\r\n            //         },\r\n            //     ],\r\n            //     followingPins: []\r\n            // }\r\n        ],\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged(firebaseUser =>{\r\n            if(firebaseUser){\r\n                this.setState({ loginEmail: firebaseUser.email });\r\n\r\n                const user = firebase.auth().currentUser;\r\n                // console.log('current user: ', user);\r\n                this.loadDatabase();\r\n            }\r\n            else{\r\n                const url = '/';\r\n                window.location.href = url;\r\n                console.log('not logged in');\r\n            }\r\n        });\r\n    }\r\n\r\n    loadDatabase = () =>{\r\n        axios.get('/.json')\r\n            .then(res=>{\r\n                // console.log('load: ',res.data);\r\n\r\n                // firebase won't store empty array, so create empty array here\r\n                for(let user of res.data.allUsers){\r\n                    if(!user.tweets){\r\n                        user.tweets = [];\r\n                    }\r\n                    if(!user.following){\r\n                        user.following = [];\r\n                    }\r\n                }\r\n                console.log('new res.data: ', res.data);\r\n                this.setState({\r\n                    allUsers: res.data.allUsers,\r\n                    dbLoaded: true,\r\n                });\r\n            })\r\n            .catch(err=>console.log(err));\r\n    }\r\n\r\n    logOutHandler = () =>{\r\n        console.log('logging out');\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    // pin handlers-------------------------------------------\r\n    webUrlHandler = (webUrl) =>{\r\n        console.log('url: ', webUrl);\r\n        window.open(webUrl);\r\n    };\r\n\r\n    render(){\r\n        let pins = null;\r\n\r\n        if(this.state.dbLoaded){\r\n            console.log('======================', this.state);\r\n            const allUsers = [...this.state.allUsers];\r\n            const loginEmail = this.state.loginEmail;\r\n            console.log('loginEmail: ', loginEmail);\r\n            const userIndex = allUsers.findIndex(val=>{\r\n                return val.email === loginEmail;\r\n            });\r\n            const currentUser = allUsers[userIndex];\r\n            console.log('currentUser: ', currentUser);\r\n\r\n            if(currentUser.yourPins && currentUser.yourPins.length){\r\n                pins = currentUser.yourPins.map((pin)=>{\r\n                    return <Pin\r\n                        title={pin.title}\r\n                        imageUrl={pin.imageUrl}\r\n                        webUrl={pin.webUrl}\r\n                        key={pin.pinId}\r\n                        onWebUrlClicked={this.webUrlHandler.bind(this, pin.webUrl)}/>\r\n                });\r\n            }\r\n            else{\r\n                pins = <p>There are no Pins to display</p>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='Pins'>\r\n                <Navbar>\r\n                    <div className='leftContainer'>\r\n                        <a href=\"/home\">Home</a>\r\n                        <a href=\"/following\">following pins</a>\r\n                    </div>\r\n                    <div className=\"rightContainer\">\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={this.logOutHandler}>Log out</Button>\r\n                    </div>\r\n                </Navbar>\r\n                <div className=\"pinsContainer\">\r\n                    {pins}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pins;","import React, { Component } from 'react';\r\nimport './FollowingPins.css';\r\nimport * as firebase from 'firebase';\r\nimport axios from '../../axios';\r\nimport {database} from \"../../firebase\";\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Button from '../../components/Button/Button';\r\nimport Pin from \"../../components/Pin/Pin\";\r\n\r\nclass FollowingPins extends Component {\r\n    state={\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('component did mount');\r\n        firebase.auth().onAuthStateChanged(firebaseUser =>{\r\n            if(firebaseUser){\r\n                this.setState({ loginEmail: firebaseUser.email });\r\n\r\n                const user = firebase.auth().currentUser;\r\n                // console.log('current user: ', user);\r\n                this.loadDatabase();\r\n            }\r\n            else{\r\n                const url = '/';\r\n                window.location.href = url;\r\n                console.log('not logged in');\r\n            }\r\n        });\r\n    }\r\n\r\n    loadDatabase = () =>{\r\n        axios.get('/.json')\r\n            .then(res=>{\r\n                console.log('load: ',res.data);\r\n\r\n                // firebase won't store empty array, so create empty array here\r\n                for(let user of res.data.allUsers){\r\n                    if(!user.yourPins){\r\n                        user.yourPins = [];\r\n                    }\r\n                    if(!user.followingPins){\r\n                        user.followingPins = [];\r\n                    }\r\n                }\r\n                console.log('new res.data: ', res.data);\r\n                this.setState({\r\n                    allUsers: res.data.allUsers,\r\n                    dbLoaded: true,\r\n                    lastPinId: res.data.lastPinId,\r\n                });\r\n                this.setStateFollowingPins();\r\n            })\r\n            .catch(err=>console.log(err));\r\n    };\r\n\r\n    logOutHandler = () =>{\r\n        console.log('logging out');\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    setStateFollowingPins = () =>{\r\n        const allUsers = [...this.state.allUsers];\r\n        const loginEmail = this.state.loginEmail;\r\n        console.log('loginemail: ', loginEmail);\r\n        console.log('allusers: ', allUsers);\r\n        const userIndex = allUsers.findIndex(val=>{\r\n            return val.email === loginEmail;\r\n        });\r\n        const followingPins = allUsers[userIndex].followingPins;\r\n        console.log('floowing pins: ', followingPins);\r\n        this.setState({followingPins: followingPins});\r\n    }\r\n\r\n    // pin handlers-------------------------------------------\r\n    webUrlHandler = (webUrl) =>{\r\n        console.log('url: ', webUrl);\r\n        window.open(webUrl);\r\n    };\r\n\r\n    render(){\r\n        let pins = null;\r\n        if(this.state.dbLoaded){\r\n            // render following pins\r\n            if(this.state.followingPins && this.state.followingPins.length){\r\n                console.log('yes if');\r\n                pins = this.state.followingPins.map(pin=>{\r\n                    return <Pin\r\n                        title={pin.title}\r\n                        imageUrl={pin.imageUrl}\r\n                        webUrl={pin.webUrl}\r\n                        key={pin.pinId}\r\n                        onWebUrlClicked={this.webUrlHandler.bind(this, pin.webUrl)}/>\r\n                });\r\n            }\r\n            else{\r\n                console.log('no if');\r\n                pins = <p>There are no pins to display</p>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='FollowingPins'>\r\n                <Navbar>\r\n                    <div className='leftContainer'>\r\n                        <a href=\"/home\">Home</a>\r\n                        <a href=\"/pins\">your pins</a>\r\n                    </div>\r\n                    <div className=\"rightContainer\">\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={this.logOutHandler}>Log out</Button>\r\n                    </div>\r\n                </Navbar>\r\n                <div className=\"pinsContainer\">\r\n                    {pins}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FollowingPins;","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport Signup from './pages/Signup/Signup';\nimport Pins from './pages/Pins/Pins';\nimport FollowingPins from './pages/FollowingPins/FollowingPins';\n\nclass App extends Component {\n\n  render() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Route path='/home' exact component={Home}/>\n                <Route path='/' exact component={Login}/>\n                <Route path='/signup' exact component={Signup}/>\n                <Route path='/pins' exact component={Pins}/>\n                <Route path='/following' exact component={FollowingPins}/>\n            </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Swan_large_1450932169.12691117.jpg\";"],"sourceRoot":""}