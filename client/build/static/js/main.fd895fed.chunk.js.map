{"version":3,"sources":["axios.js","firebase.js","components/Navbar/Navbar.js","components/Button/Button.js","components/Modal/Modal.js","components/Input/Input.js","components/Pin/Pin.js","pages/Home/Home.js","pages/Login/Login.js","pages/Signup/Signup.js","pages/Pins/Pins.js","pages/FollowingPins/FollowingPins.js","App.js","serviceWorker.js","index.js","assets/Swan_large_1450932169.jpg"],"names":["instance","axios","create","baseURL","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","navbar","props","react_default","a","createElement","className","children","button","btnClass","color","Object","assign","disabled","modal","showModal","console","log","canSaveButton","onClick","onCloseBtnClicked","title","Button_Button","type","onSaveBtnClicked","input","labelElement","inputElement","styleLabel","styleLabelForCheckbox","req","inputtype","htmlFor","id","label","fileLabelSpan","filelabelspan","fileLabel","filelabel","spanText","data-multiple-caption","options","map","option","key","value","displayValue","Fragment","name","checked","selected","ischecked","pin","onPinSaveButtonClicked","webUrl","length","substring","style","src","imageUrl","alt","onWebUrlClicked","Home","state","allUsers","allPins","loadDatabase","get","then","res","data","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","user","yourPins","followingPins","err","return","_this","setState","dbLoaded","lastPinId","setStateAllPins","catch","updateDatabase","toConsumableArray","ref","set","loginEmail","copyAllUsers","userIndex","findIndex","val","email","splice","pinsToDisplayWithFollowingPins","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","push","yourFollowingPins","indexes","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop","remVal","pinId","_iterator3","sortedIndexes","sort","b","i","logOutHandler","signOut","inputTextHandler","ev","target","files","createPinHandler","newPin","file","put","child","getDownloadURL","url","this","closeModalHandler","bind","assertThisInitialized","webUrlHandler","window","open","savePinHandler","indexOfPin","indexOfUser","_this2","onAuthStateChanged","firebaseUser","currentUser","location","href","_this3","pins","Pin_Pin","Navbar_Navbar","Modal_Modal","Input_Input","onChange","Component","Login","errorMessage","emailText","passwordText","inputHandler","labelVal","nextElementSibling","innerHTML","fileName","getAttribute","replace","split","pop","span","defineProperty","objectSpread","handlerKeyPress","formLoginHandler","password","signInWithEmailAndPassword","e","message","form","onKeyPress","handleKeyPress","autoFocus","SignUp","firstNameText","lastNameText","firstName","lastName","formSignupHandler","createUserWithEmailAndPassword","Pins","tweets","following","FollowingPins","setStateFollowingPins","App","react_router_dom","react_router","path","exact","component","Signup","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"wbAMeA,SAJEC,EAAMC,OAAO,CAC1BC,QAAS,qECQbC,gBARa,CACTC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,gBAIvB,IAAMC,EAAWP,aCFFQ,UARA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVJ,EAAMK,YCiBJC,iBApBA,SAACN,GAEZ,IAAIO,EAAW,GAWf,OATIA,EADe,YAAhBP,EAAMQ,MACI,kBAEW,WAAhBR,EAAMQ,MACC,aAGA,MAIXP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAAM,OAAAC,OAAA,CAAQC,SAAUX,EAAMW,SAAUP,UAAWG,GAAcP,GAAQA,EAAMK,aCqBtEO,EAlCD,SAACZ,GAGX,OAAIA,EAAMa,WAGVC,QAAQC,IAAI,kBAAmBf,EAAMgB,eACrCF,QAAQC,IAAI,cAAef,EAAMa,WAG7BZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,QAAMc,QAASjB,EAAMkB,kBAAmBd,UAAU,SAAlD,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVJ,EAAMmB,OAGXlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACVJ,EAAMK,UAGXJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNa,KAAK,SACLJ,QAASjB,EAAMsB,iBACfX,SAAUX,EAAMgB,eAJpB,cAlBL,MC+GAO,UAxFD,SAACvB,GACX,IAAIwB,EAAe,KACfC,EAAe,KACfC,EAAa,aACbC,EAAwB,oBAO5B,GALG3B,EAAM4B,MACLF,GAAc,OACdC,GAAyB,QAGN,UAApB3B,EAAM6B,WAAwC,SAAf7B,EAAMqB,KACpCG,EAAgBvB,EAAAC,EAAAC,cAAA,SAAOC,UAAWsB,EAAYI,QAAS9B,EAAM+B,IAAK/B,EAAMgC,OACxEP,EAAexB,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,CAAON,UAAU,aAAgBJ,SAG/C,GAAuB,UAApBA,EAAM6B,WAAwC,aAAf7B,EAAMqB,KACzCG,EAAgBvB,EAAAC,EAAAC,cAAA,SAAOC,UAAWsB,EAAYI,QAAS9B,EAAM+B,IAAK/B,EAAMgC,OACxEP,EAAexB,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,CAAON,UAAU,aAAgBJ,SAE/C,GAAuB,aAApBA,EAAM6B,UACVL,EAAgBvB,EAAAC,EAAAC,cAAA,SAAOC,UAAWsB,EAAYI,QAAS9B,EAAM+B,IAAK/B,EAAMgC,OACxEP,EAAexB,EAAAC,EAAAC,cAAA,WAAAM,OAAAC,OAAA,CAAUN,UAAU,aAAgBJ,SAElD,GAAuB,UAApBA,EAAM6B,WAAwC,SAAf7B,EAAMqB,KAAgB,CAGzD,IAAIY,EAAgBjC,EAAMkC,cACtBC,EAAYnC,EAAMoC,UAClBC,EAAWrC,EAAMgC,MAClBhC,EAAMkC,eACLG,EAAW,KACXF,EAAY,MAERnC,EAAMoC,YACVC,EAAW,KACXJ,EAAgB,MAEpBR,EAAexB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,GAAWV,EAAX,CAAkBI,UAAU,YACrBkC,wBAAsB,4BAC7BrC,EAAAC,EAAAC,cAAA,SAAO2B,QAAS9B,EAAM+B,IAAI9B,EAAAC,EAAAC,cAAA,YAAO8B,EAAeE,EAAWE,SAGnD,WAApBrC,EAAM6B,WACVL,EAAgBvB,EAAAC,EAAAC,cAAA,SAAOC,UAAWsB,EAAYI,QAAS9B,EAAM+B,IAAK/B,EAAMgC,OACxEP,EAAexB,EAAAC,EAAAC,cAAA,SAAAM,OAAAC,OAAA,CAAQN,UAAU,eAAkBJ,GAC9CA,EAAMuC,QAAQC,IAAI,SAAAC,GACf,OAAOxC,EAAAC,EAAAC,cAAA,UAAQuC,IAAKD,EAAOE,MAAOA,MAAOF,EAAOE,OAAQF,EAAOG,kBAI/C,UAApB5C,EAAM6B,WAAwC,UAAf7B,EAAMqB,KAMzCI,EAAexB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbJ,EAAMuC,QAAQC,IAAI,SAAAC,GACf,OAAOxC,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,SAAP,CAAgBH,IAAKD,EAAOV,IAC/B9B,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,GAAWV,EAAX,CAAkBqB,KAAMrB,EAAMqB,KAAMjB,UAAU,gDAAgD2B,GAAIU,EAAOV,GAAIe,KAAM9C,EAAM8C,KAAMH,MAAOF,EAAOE,MAAOI,QAASN,EAAOE,QAAU3C,EAAMgD,YACpL/C,EAAAC,EAAAC,cAAA,SAAOC,UAAU,wBAAwB0B,QAASW,EAAOV,IAAKU,EAAOT,WAKrE,UAApBhC,EAAM6B,WAAwC,aAAf7B,EAAMqB,OAIzCI,EAAexB,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,SAAOC,UAAWuB,EAAuBG,QAAS9B,EAAM8C,MAAO9C,EAAMgC,MACrE/B,EAAAC,EAAAC,cAAA,QAAAM,OAAAC,OAAA,GAAWV,EAAX,CAAkB+C,UAAW/C,EAAMiD,aAC3BhD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iBAM5C,OACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACVoB,EACAC,KC/EEyB,UAhCH,SAAClD,GAET,IAKIM,EAAS,GACVN,EAAMmD,yBACL7C,EAASL,EAAAC,EAAAC,cAACiB,EAAD,CAAQH,QAASjB,EAAMmD,uBAAwB/C,UAAU,kBAAzD,SAIb,IAAIgD,EAAS,GAUb,OATGpD,EAAMoD,SAEDA,EADDpD,EAAMoD,OAAOC,OAAS,GACZrD,EAAMoD,OAAOE,UAAU,EAAG,IAAI,MAG9BtD,EAAMoD,QAKnBnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMmD,MAtBX,IAuBNtD,EAAAC,EAAAC,cAAA,OAAKqD,IAAKxD,EAAMyD,SAAUC,IAAI,UAC7BpD,EACDL,EAAAC,EAAAC,cAAA,QAAMc,QAASjB,EAAM2D,gBAAiBvD,UAAU,WAAhD,OAAiEgD,EAAjE,WC4UGQ,oNA7VXC,MAAM,CACFC,SAAU,GASVC,QAAS,GAgCTlD,WAAW,EACXG,eAAe,KAqBnBgD,aAAe,WACX5E,EAAM6E,IAAI,UACLC,KAAK,SAAAC,GACFrD,QAAQC,IAAI,SAASoD,EAAIC,MADlB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIP,QAAAC,EAAAC,EAAgBP,EAAIC,KAAKN,SAAzBa,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAA1BU,EAA0BN,EAAA9B,MAC1BoC,EAAKC,WACLD,EAAKC,SAAW,IAEhBD,EAAKE,gBACLF,EAAKE,cAAgB,KATtB,MAAAC,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAYPzD,QAAQC,IAAI,iBAAkBoD,EAAIC,MAClCgB,EAAKC,SAAS,CACVvB,SAAUK,EAAIC,KAAKN,SACnBwB,UAAU,EACVC,UAAWpB,EAAIC,KAAKmB,YAExBH,EAAKI,oBAERC,MAAM,SAAAP,GAAG,OAAEpE,QAAQC,IAAImE,QAGhCQ,eAAiB,SAAC5B,GACdhD,QAAQC,IAAI,iBAAkBqE,EAAKvB,MAAMC,UACzChD,QAAQC,IAAI,iBAAkB+C,GAE9B,IAAMM,EAAI3D,OAAAkF,EAAA,EAAAlF,CAAO2E,EAAKvB,MAAMC,UACtByB,EAAYH,EAAKvB,MAAM0B,UAC7BzF,EAAS8F,IAAI,wBAAwBC,IAAI,CACrC/B,SAAUM,EACVmB,UAAWA,OAInBC,gBAAkB,WACd,IAAMM,EAAaV,EAAKvB,MAAMiC,WAExBhC,EAAQrD,OAAAkF,EAAA,EAAAlF,CAAO2E,EAAKvB,MAAMC,UAI1BiC,EAAYtF,OAAAkF,EAAA,EAAAlF,CAAO2E,EAAKvB,MAAMC,UAG9BkC,EAAYD,EAAaE,UAAU,SAAAC,GACrC,OAAOA,EAAIC,QAAUL,IAIzBC,EAAaK,OAAOJ,EAAW,GAE/B,IAAMK,EAAiC,GAjBpBC,GAAA,EAAAC,GAAA,EAAAC,OAAAhC,EAAA,IAkBnB,QAAAiC,EAAAC,EAAgBX,EAAhBpB,OAAAC,cAAA0B,GAAAG,EAAAC,EAAA7B,QAAAC,MAAAwB,GAAA,EAA6B,KAArBvB,EAAqB0B,EAAA9D,MAAAgE,GAAA,EAAAC,GAAA,EAAAC,OAAArC,EAAA,IACzB,QAAAsC,EAAAC,EAAehC,EAAKC,SAApBL,OAAAC,cAAA+B,GAAAG,EAAAC,EAAAlC,QAAAC,MAAA6B,GAAA,EAA6B,KAArBzD,EAAqB4D,EAAAnE,MACzB0D,EAA+BW,KAAK9D,IAFf,MAAAgC,GAAA0B,GAAA,EAAAC,EAAA3B,EAAA,YAAAyB,GAAA,MAAAI,EAAA5B,QAAA4B,EAAA5B,SAAA,WAAAyB,EAAA,MAAAC,KAlBV,MAAA3B,GAAAqB,GAAA,EAAAC,EAAAtB,EAAA,YAAAoB,GAAA,MAAAI,EAAAvB,QAAAuB,EAAAvB,SAAA,WAAAoB,EAAA,MAAAC,GAwBnB1F,QAAQC,IAAI,mCAAmCsF,GAG/C,IAAMY,EAAoBnD,EAASkC,GAAWf,cAExCiC,EAAU,GAGhB,GAAGD,EAAkB5D,OAAO,KAAA8D,GAAA,EAAAC,GAAA,EAAAC,OAAA7C,EAAA,IACxB,IADwB,IACxB8C,EADwBC,EAAA,eAChBC,EADgBF,EAAA3E,MAEpBuE,EAAQF,KAAKX,EAA+BJ,UAAU,SAASC,GAC3D,OAAOA,EAAIuB,QAAUD,EAAOC,UAFpCC,EAAkBT,EAAlBtC,OAAAC,cAAAuC,GAAAG,EAAAI,EAAA7C,QAAAC,MAAAqC,GAAA,EAAoCI,IADZ,MAAArC,GAAAkC,GAAA,EAAAC,EAAAnC,EAAA,YAAAiC,GAAA,MAAAO,EAAAvC,QAAAuC,EAAAvC,SAAA,WAAAiC,EAAA,MAAAC,GAaxB,IAHA,IAAMM,EAAgBT,EAAQU,KAAK,SAAS1H,EAAG2H,GAAI,OAAO3H,EAAI2H,IAGtDC,EAAEH,EAActE,OAAO,EAAGyE,GAAG,EAAGA,IACpCzB,EAA+BD,OAAOuB,EAAcG,GAAI,GAOhE1C,EAAKC,SAAS,CAACtB,QAASsC,OAG5B0B,cAAgB,WACZjH,QAAQC,IAAI,eACZxB,SAAgByI,aAGpBC,iBAAmB,SAACC,EAAI7G,GACR,UAATA,EACC+D,EAAKC,SAAS,CAAClE,MAAO+G,EAAGC,OAAOxF,QAEnB,WAATtB,EACJ+D,EAAKC,SAAS,CAACjC,OAAQ8E,EAAGC,OAAOxF,QAEpB,SAATtB,GACJ+D,EAAKC,SAAS,CAAC5B,SAAUyE,EAAGC,OAAOC,MAAM,QAKjDC,iBAAmB,SAAClC,GAEhB,GAAGf,EAAKvB,MAAM1C,OAASiE,EAAKvB,MAAMJ,UAAY2B,EAAKvB,MAAMT,OAAO,CAC5D,IAAMkF,EAAS,GACfA,EAAOnH,MAAQiE,EAAKvB,MAAM1C,MAC1BmH,EAAO7E,SAAW2B,EAAKvB,MAAMJ,SAC7B6E,EAAOlF,OAASgC,EAAKvB,MAAMT,OAE3B,IAAImC,EAAYH,EAAKvB,MAAM0B,UAC3BzE,QAAQC,IAAI,YAAawE,GACzB+C,EAAOb,MAAQlC,EAAU,EACzBzE,QAAQC,IAAI,OAAQuH,EAAOb,OAI3BrC,EAAKC,SAAS,CACVrE,eAAe,EACfuE,UAAW+C,EAAOb,QAItB,IAAMc,EAAOnD,EAAKvB,MAAMJ,SAGLlE,YAAmBqG,IAAI,qBAAuB2C,EAAKzF,MAG3D0F,IAAID,GAAMrE,KAAK,WAEN3E,YAAmBqG,MAC3B6C,MAAM,qBAAqBF,EAAKzF,MAAM4F,iBAAiBxE,KAAK,SAASyE,GACzE7H,QAAQC,IAAI,QAAS4H,GACrBL,EAAO7E,SAAWkF,EAIlB,IAAM7E,EAAQrD,OAAAkF,EAAA,EAAAlF,CAAOmI,KAAK/E,MAAMC,UAChChD,QAAQC,IAAI,QAAS+C,GACrB,IAAMkC,EAAYlC,EAASmC,UAAU,SAAAC,GACjC,OAAOA,EAAIC,QAAUA,IAEzBrF,QAAQC,IAAI,OAAQiF,GACpBlC,EAASkC,GAAWhB,SAASgC,KAAKsB,GAClCM,KAAKC,oBAELD,KAAKlD,eAAe5B,GAGpB8E,KAAKvD,SAAS,CACVrE,eAAe,EACfG,MAAO,GACPiC,OAAQ,GACRK,SAAU,MAEhBqF,KAAKF,QACTE,KA5BwBrI,OAAAsI,EAAA,EAAAtI,QAAAsI,EAAA,EAAAtI,CAAA2E,UAgClCvE,UAAY,WACRuE,EAAKC,SAAS,CAACxE,WAAW,OAE9BgI,kBAAoB,WAChBzD,EAAKC,SAAS,CAACxE,WAAW,OAI9BmI,cAAgB,SAAC5F,GACbtC,QAAQC,IAAI,QAASqC,GACrB6F,OAAOC,KAAK9F,MAGhB+F,eAAiB,SAAC1B,GACd3G,QAAQC,IAAI,UAAW0G,GACvB,IAAM1D,EAAOtD,OAAAkF,EAAA,EAAAlF,CAAO2E,EAAKvB,MAAME,SAEzBqF,EAAarF,EAAQkC,UAAU,SAAAC,GACjC,OAAOA,EAAIuB,QAAUA,IAInB3B,EAAaV,EAAKvB,MAAMiC,WACxBhC,EAAQrD,OAAAkF,EAAA,EAAAlF,CAAO2E,EAAKvB,MAAMC,UAC1BuF,EAAcvF,EAASmC,UAAU,SAAAC,GACnC,OAAOA,EAAIC,QAAUL,IAIzBhC,EAASuF,GAAapE,cAAc+B,KAAKjD,EAAQqF,IAEjDhE,EAAKC,SAAS,CACVvB,SAAUA,IAGdhD,QAAQC,IAAIqE,EAAKvB,OACjBuB,EAAKM,iBAELN,EAAKI,sGAlOU,IAAA8D,EAAAV,KACf9H,QAAQC,IAAI,uBACZxB,SAAgBgK,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZF,EAAKjE,SAAS,CAAES,WAAY0D,EAAarD,QAE5B5G,SAAgBkK,YAE7BH,EAAKtF,mBAEL,CAEAiF,OAAOS,SAASC,KADJ,IAEZ7I,QAAQC,IAAI,qDAwNhB,IAAA6I,EAAAhB,KACAiB,EAAO,KAmBX,OAlBGjB,KAAK/E,MAAMyB,WACVxE,QAAQC,IAAI,kCAAkC6H,KAAK/E,OAE/CgG,EADDjB,KAAK/E,MAAME,SAAW6E,KAAK/E,MAAME,QAAQV,OACjCuF,KAAK/E,MAAME,QAAQvB,IAAI,SAAAU,GAC1B,OAAOjD,EAAAC,EAAAC,cAAC2J,EAAD,CACH3I,MAAO+B,EAAI/B,MACXsC,SAAUP,EAAIO,SACdL,OAAQF,EAAIE,OACZV,IAAKQ,EAAIuE,MACT9D,gBAAiBiG,EAAKZ,cAAcF,KAAKc,EAAM1G,EAAIE,QACnDD,uBAAwByG,EAAKT,eAAeL,KAAKc,EAAM1G,EAAIuE,WAI5DxH,EAAAC,EAAAC,cAAA,0CAKXF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAC4J,EAAD,KACI9J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,SAAR,QACA1J,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,SAAR,aACA1J,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,cAAR,mBAEJ1J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNS,QAAS2H,KAAK/H,WAFlB,cAGAZ,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNS,QAAS2H,KAAKb,eAFlB,aAMR9H,EAAAC,EAAAC,cAAC6J,EAAD,CACI7I,MAAM,kBACNG,iBAAkBsH,KAAKP,iBAAiBS,KAAKF,KAAMA,KAAK/E,MAAMiC,YAC9D5E,kBAAmB0H,KAAKC,kBACxBhI,UAAW+H,KAAK/E,MAAMhD,UACtBG,cAAe4H,KAAK/E,MAAM7C,eAE1Bf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC8J,EAAD,CACIpI,UAAU,QACVR,KAAK,OACLW,MAAM,cACNkI,SAAU,SAAChC,GAAD,OAAM0B,EAAK3B,iBAAiBC,EAAI,YAC9CjI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8J,EAAD,CACIpI,UAAU,QACVR,KAAK,OACLW,MAAM,qBACNkI,SAAU,SAAChC,GAAD,OAAM0B,EAAK3B,iBAAiBC,EAAI,aAC9CjI,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAC8J,EAAD,CACIpI,UAAU,QACVR,KAAK,OACLW,MAAM,cACNkI,SAAU,SAAChC,GAAD,OAAM0B,EAAK3B,iBAAiBC,EAAI,aAGtDjI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVyJ,WAtVFM,8BCyJJC,qNA9JXvG,MAAM,CACFwG,aAAc,GACdjG,KAAO,CACHkG,UAAY,GACZC,aAAc,OAqCtBC,aAAe,SAACtC,GAEZ,GADApH,QAAQC,IAAI,SAAUmH,EAAGC,OAAO9G,MAC7B6G,EAAGC,OAAO9G,MAA2B,SAAnB6G,EAAGC,OAAO9G,KAAgB,CAE3C,IACMoJ,EADQvC,EAAGC,OAAOuC,mBACDC,UAEnBC,EAAW,GAQf,GANIA,EADD1C,EAAGC,OAAOC,OAASF,EAAGC,OAAOC,MAAM/E,OAAS,GAC/B6E,EAAGC,OAAO0C,aAAa,0BAA4B,IAAIC,QAAQ,UAAW5C,EAAGC,OAAOC,MAAM/E,QAG3F6E,EAAGC,OAAOxF,MAAMoI,MAAM,MAAMC,MAG/B,CACR,IAAMC,EAAO/C,EAAGC,OAAOrF,KAAM,EAC7BhC,QAAQC,IAAI,eAAgBkK,GAC5B7F,EAAKC,SAAL5E,OAAAyK,EAAA,EAAAzK,CAAA,GAAiBwK,EAAOL,QAExB,CACA,IAAM5I,EAAQkG,EAAGC,OAAOrF,KAAM,EAC9BsC,EAAKC,SAAL5E,OAAAyK,EAAA,EAAAzK,CAAA,GAAgBuB,EAAOyI,UAU1B,GAAGvC,EAAGC,OAAO9G,MAA2B,aAAnB6G,EAAGC,OAAO9G,KAEhC,GADAP,QAAQC,IAAI,aAAcmH,EAAGC,OAAOpF,SACjCmF,EAAGC,OAAOpF,QAAQ,CACjB,IAAMqB,EAAI3D,OAAA0K,EAAA,EAAA1K,CAAA,GAAO2E,EAAKvB,MAAMO,MAC5BA,EAAK8D,EAAGC,OAAOrF,MAAQoF,EAAGC,OAAOxF,MACjCyC,EAAKC,SAAS,CAAEjB,KAAOA,QAEvB,CACA,IAAMA,EAAI3D,OAAA0K,EAAA,EAAA1K,CAAA,GAAO2E,EAAKvB,MAAMO,MAC5BA,EAAK8D,EAAGC,OAAOrF,MAAQ,GACvBsC,EAAKC,SAAS,CAAEjB,KAAMA,QAG1B,CACA,IAAMA,EAAI3D,OAAA0K,EAAA,EAAA1K,CAAA,GAAO2E,EAAKvB,MAAMO,MAC5BA,EAAK8D,EAAGC,OAAOrF,MAAQoF,EAAGC,OAAOxF,MACjCyC,EAAKC,SAAS,CAAEjB,KAAMA,QAO9BgH,gBAAkB,SAAClD,GACD,UAAXA,EAAGxF,KACF0C,EAAKiG,sBAIbA,iBAAmB,WACf,IAAMlF,EAAQf,EAAKvB,MAAMO,KAAKkG,UACxBgB,EAAWlG,EAAKvB,MAAMO,KAAKmG,aACpBhL,SACQgM,2BAA2BpF,EAAOmF,GAC/C7F,MAAM,SAAA+F,GACV1K,QAAQC,IAAIyK,EAAEC,SACdrG,EAAKC,SAAS,CAACgF,aAAcmB,EAAEC,gGAlGnClM,SAAgBgK,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZ1I,QAAQC,IAAIyI,GAEZP,OAAOS,SAASC,KADJ,aAIZ7I,QAAQC,IAAI,mBASpB6H,KAAKvD,SAAS,CACVjB,KANS,CACTkG,UAAW,gBACXC,aAAc,+CAyFd,IAAAjB,EAAAV,KACAyB,EAAe,GAChBzB,KAAK/E,MAAMwG,eACVA,EAAepK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAawI,KAAK/E,MAAMwG,eAGxD,IAAMqB,EAAOzL,EAAAC,EAAAC,cAAA,YACTF,EAAAC,EAAAC,cAAC8J,EAAD,CACIpI,UAAU,QACVR,KAAK,OACLW,MAAM,QACNW,MAAOiG,KAAK/E,MAAMO,KAAKkG,UACvBxH,KAAK,YACLf,GAAG,YACHmI,SAAUtB,KAAK4B,aACfmB,WAAY/C,KAAKgD,eACjBC,WAAS,IAEb5L,EAAAC,EAAAC,cAAC8J,EAAD,CACIpI,UAAU,QACVR,KAAK,WACLW,MAAM,WACNW,MAAOiG,KAAK/E,MAAMO,KAAKmG,aACvBzH,KAAK,eACLf,GAAG,eACHmI,SAAUtB,KAAK4B,aACfmB,WAAY/C,KAAKwC,kBAEpBf,EACDpK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACiB,EAAD,CAAQZ,MAAM,UAAUS,QAAS,kBAAIqI,EAAK+B,oBAAoBhK,KAAK,UAAnE,UACApB,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,cAAQF,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,WAAR,cAIhB,OACI1J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,qCACCuL,UAzJGvB,cC6KL2B,qNA3KXjI,MAAQ,CACJwG,aAAc,GACd0B,cAAe,GACfC,aAAc,GACd1B,UAAW,GACXxG,SAAU,GACVyG,aAAc,MAiBlBvG,aAAe,WACXlD,QAAQC,IAAI,kBACZ3B,EAAM6E,IAAI,UACLC,KAAK,SAAAC,GACFrD,QAAQC,IAAI,SAASoD,EAAIC,MACtBD,EAAIC,KAAKN,UAAYK,EAAIC,KAAKN,SAAST,QACtCvC,QAAQC,IAAI,cACZqE,EAAKC,SAAS,CACVvB,SAAUK,EAAIC,KAAKN,SACnByB,UAAWpB,EAAIC,KAAKmB,UACpBD,UAAU,KAKdF,EAAKC,SAAS,CACVvB,SAAU,GACVyB,UAAWpB,EAAIC,KAAKmB,UACpBD,UAAU,MAIrBG,MAAM,SAAAP,GAAG,OAAEpE,QAAQC,IAAImE,QAGhC+C,iBAAmB,SAACC,EAAI7G,GACR,UAATA,EACC+D,EAAKC,SAAS,CACViF,UAAWpC,EAAGC,OAAOxF,QAGd,cAAPtB,EACJ+D,EAAKC,SAAS,CACV0G,cAAe7D,EAAGC,OAAOxF,QAGlB,aAAPtB,EACJ+D,EAAKC,SAAS,CACV2G,aAAc9D,EAAGC,OAAOxF,QAGjB,aAAPtB,GACJ+D,EAAKC,SAAS,CACVkF,aAAcrC,EAAGC,OAAOxF,WAKpC+C,eAAiB,SAACS,EAAO8F,EAAWC,EAAU3G,GAC1C,IAAMzB,EAAWsB,EAAKvB,MAAMC,SAC5BhD,QAAQC,IAAI,qBAAsBqE,EAAKvB,OACvCC,EAASkD,KAAK,CACViF,UAAWA,EACXC,SAAUA,EACV/F,MAAOA,EACPnB,SAAU,GACVC,cAAe,KAGnBnF,EAAS8F,IAAI,yBAAyBC,IAAI,CACtC/B,SAAUA,EACVyB,UAAWA,OAInB4G,kBAAoB,WAChB,IAAMhG,EAAQf,EAAKvB,MAAMyG,UACnBgB,EAAWlG,EAAKvB,MAAM0G,aACtB0B,EAAY7G,EAAKvB,MAAMkI,cACvBG,EAAW9G,EAAKvB,MAAMmI,aACtBzG,EAAYH,EAAKvB,MAAM0B,UAE7B,GAAG0G,GAAaC,EAAS,CACrB9G,EAAKM,eAAeS,EAAO8F,EAAWC,EAAU3G,GAEnChG,SACQ6M,+BAA+BjG,EAAOmF,GACnD7F,MAAM,SAAA+F,GACV1K,QAAQC,IAAIyK,EAAEC,SACdrG,EAAKC,SAAS,CAACgF,aAAcmB,EAAEC,gBAGnC,CAEArG,EAAKC,SAAS,CACVgF,aAFY,oCAOxBuB,eAAiB,SAAC1D,GACA,UAAXA,EAAGxF,KACF0C,EAAK+G,wGA1GM,IAAA7C,EAAAV,KACfrJ,SAAgBgK,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZ1I,QAAQC,IAAIyI,GAEZP,OAAOS,SAASC,KADJ,aAIZ7I,QAAQC,IAAI,iBACZuI,EAAKtF,kDAqGT,IAAA4F,EAAAhB,KACAyB,EAAe,KACfqB,EAAO,KA0CX,OAzCG9C,KAAK/E,MAAMyB,WAEPsD,KAAK/E,MAAMwG,eACVA,EAAepK,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAawI,KAAK/E,MAAMwG,eAExDqB,EAAOzL,EAAAC,EAAAC,cAAA,YACHF,EAAAC,EAAAC,cAAC8J,EAAD,CACIpI,UAAU,QACVR,KAAK,OACLW,MAAM,QACNkI,SAAU,SAAChC,GAAD,OAAM0B,EAAK3B,iBAAiBC,EAAI,UAC1CyD,WAAY/C,KAAKgD,iBACrB3L,EAAAC,EAAAC,cAAC8J,EAAD,CACIpI,UAAU,QACVR,KAAK,OACLW,MAAM,aACNkI,SAAU,SAAChC,GAAD,OAAM0B,EAAK3B,iBAAiBC,EAAI,cAC1CyD,WAAY/C,KAAKgD,iBACrB3L,EAAAC,EAAAC,cAAC8J,EAAD,CACIpI,UAAU,QACVR,KAAK,OACLW,MAAM,YACNkI,SAAU,SAAChC,GAAD,OAAM0B,EAAK3B,iBAAiBC,EAAI,aAC1CyD,WAAY/C,KAAKgD,iBACrB3L,EAAAC,EAAAC,cAAC8J,EAAD,CACIpI,UAAU,QACVR,KAAK,WACLW,MAAM,WACNkI,SAAU,SAAChC,GAAD,OAAM0B,EAAK3B,iBAAiBC,EAAI,aAC1CyD,WAAY/C,KAAKgD,iBACpBvB,EACDpK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIH,QAAS,kBAAI2I,EAAKuC,qBAClB9K,KAAK,SACLb,MAAM,WAHV,cAURP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACVsL,UAtKIvB,cCiINkC,qNA9HXxI,MAAM,CACFC,SAAU,MAyCdE,aAAe,WACX5E,EAAM6E,IAAI,UACLC,KAAK,SAAAC,GAAK,IAAAE,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIP,QAAAC,EAAAC,EAAgBP,EAAIC,KAAKN,SAAzBa,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAA1BU,EAA0BN,EAAA9B,MAC1BoC,EAAKuH,SACLvH,EAAKuH,OAAS,IAEdvH,EAAKwH,YACLxH,EAAKwH,UAAY,KATlB,MAAArH,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAYPzD,QAAQC,IAAI,iBAAkBoD,EAAIC,MAClCgB,EAAKC,SAAS,CACVvB,SAAUK,EAAIC,KAAKN,SACnBwB,UAAU,MAGjBG,MAAM,SAAAP,GAAG,OAAEpE,QAAQC,IAAImE,QAGhC6C,cAAgB,WACZjH,QAAQC,IAAI,eACZxB,SAAgByI,aAIpBgB,cAAgB,SAAC5F,GACbtC,QAAQC,IAAI,QAASqC,GACrB6F,OAAOC,KAAK9F,uFAhDG,IAAAkG,EAAAV,KACfrJ,SAAgBgK,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZF,EAAKjE,SAAS,CAAES,WAAY0D,EAAarD,QAE5B5G,SAAgBkK,YAE7BH,EAAKtF,mBAEL,CAEAiF,OAAOS,SAASC,KADJ,IAEZ7I,QAAQC,IAAI,qDAuChB,IAAA6I,EAAAhB,KACAiB,EAAO,KAEX,GAAGjB,KAAK/E,MAAMyB,SAAS,CACnBxE,QAAQC,IAAI,yBAA0B6H,KAAK/E,OAC3C,IAAMC,EAAQrD,OAAAkF,EAAA,EAAAlF,CAAOmI,KAAK/E,MAAMC,UAC1BgC,EAAa8C,KAAK/E,MAAMiC,WAC9BhF,QAAQC,IAAI,eAAgB+E,GAC5B,IAAME,EAAYlC,EAASmC,UAAU,SAAAC,GACjC,OAAOA,EAAIC,QAAUL,IAEnB2D,EAAc3F,EAASkC,GAC7BlF,QAAQC,IAAI,gBAAiB0I,GAGzBI,EADDJ,EAAYzE,UAAYyE,EAAYzE,SAAS3B,OACrCoG,EAAYzE,SAASxC,IAAI,SAACU,GAC7B,OAAOjD,EAAAC,EAAAC,cAAC2J,EAAD,CACH3I,MAAO+B,EAAI/B,MACXsC,SAAUP,EAAIO,SACdL,OAAQF,EAAIE,OACZV,IAAKQ,EAAIuE,MACT9D,gBAAiBiG,EAAKZ,cAAcF,KAAKc,EAAM1G,EAAIE,YAIpDnD,EAAAC,EAAAC,cAAA,yCAIf,OACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAC4J,EAAD,KACI9J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,SAAR,QACA1J,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,cAAR,mBAEJ1J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNS,QAAS2H,KAAKb,eAFlB,aAKR9H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVyJ,WAxHFM,cCkHJqC,qNAjHX3I,MAAM,KAsBNG,aAAe,WACX5E,EAAM6E,IAAI,UACLC,KAAK,SAAAC,GACFrD,QAAQC,IAAI,SAASoD,EAAIC,MADlB,IAAAC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAIP,QAAAC,EAAAC,EAAgBP,EAAIC,KAAKN,SAAzBa,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAkC,KAA1BU,EAA0BN,EAAA9B,MAC1BoC,EAAKC,WACLD,EAAKC,SAAW,IAEhBD,EAAKE,gBACLF,EAAKE,cAAgB,KATtB,MAAAC,GAAAZ,GAAA,EAAAC,EAAAW,EAAA,YAAAb,GAAA,MAAAK,EAAAS,QAAAT,EAAAS,SAAA,WAAAb,EAAA,MAAAC,GAYPzD,QAAQC,IAAI,iBAAkBoD,EAAIC,MAClCgB,EAAKC,SAAS,CACVvB,SAAUK,EAAIC,KAAKN,SACnBwB,UAAU,EACVC,UAAWpB,EAAIC,KAAKmB,YAExBH,EAAKqH,0BAERhH,MAAM,SAAAP,GAAG,OAAEpE,QAAQC,IAAImE,QAGhC6C,cAAgB,WACZjH,QAAQC,IAAI,eACZxB,SAAgByI,aAGpByE,sBAAwB,WACpB,IAAM3I,EAAQrD,OAAAkF,EAAA,EAAAlF,CAAO2E,EAAKvB,MAAMC,UAC1BgC,EAAaV,EAAKvB,MAAMiC,WAC9BhF,QAAQC,IAAI,eAAgB+E,GAC5BhF,QAAQC,IAAI,aAAc+C,GAC1B,IAAMkC,EAAYlC,EAASmC,UAAU,SAAAC,GACjC,OAAOA,EAAIC,QAAUL,IAEnBb,EAAgBnB,EAASkC,GAAWf,cAC1CnE,QAAQC,IAAI,kBAAmBkE,GAC/BG,EAAKC,SAAS,CAACJ,cAAeA,OAIlC+D,cAAgB,SAAC5F,GACbtC,QAAQC,IAAI,QAASqC,GACrB6F,OAAOC,KAAK9F,uFAhEG,IAAAkG,EAAAV,KACf9H,QAAQC,IAAI,uBACZxB,SAAgBgK,mBAAmB,SAAAC,GAC/B,GAAGA,EAAa,CACZF,EAAKjE,SAAS,CAAES,WAAY0D,EAAarD,QAE5B5G,SAAgBkK,YAE7BH,EAAKtF,mBAEL,CAEAiF,OAAOS,SAASC,KADJ,IAEZ7I,QAAQC,IAAI,qDAsDhB,IAAA6I,EAAAhB,KACAiB,EAAO,KAoBX,OAnBGjB,KAAK/E,MAAMyB,WAEPsD,KAAK/E,MAAMoB,eAAiB2D,KAAK/E,MAAMoB,cAAc5B,QACpDvC,QAAQC,IAAI,UACZ8I,EAAOjB,KAAK/E,MAAMoB,cAAczC,IAAI,SAAAU,GAChC,OAAOjD,EAAAC,EAAAC,cAAC2J,EAAD,CACH3I,MAAO+B,EAAI/B,MACXsC,SAAUP,EAAIO,SACdL,OAAQF,EAAIE,OACZV,IAAKQ,EAAIuE,MACT9D,gBAAiBiG,EAAKZ,cAAcF,KAAKc,EAAM1G,EAAIE,cAI3DtC,QAAQC,IAAI,SACZ8I,EAAO5J,EAAAC,EAAAC,cAAA,2CAKXF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAC4J,EAAD,KACI9J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,SAAR,QACA1J,EAAAC,EAAAC,cAAA,KAAGwJ,KAAK,SAAR,cAEJ1J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACiB,EAAD,CACIZ,MAAM,UACNS,QAAS2H,KAAKb,eAFlB,aAKR9H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVyJ,WA3GOM,cCiBbuC,mLAdX,OACIzM,EAAAC,EAAAC,cAACwM,EAAA,EAAD,KACI1M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAWnJ,IACrC3D,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW3C,IACjCnK,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,UAAUC,OAAK,EAACC,UAAWC,IACvC/M,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,QAAQC,OAAK,EAACC,UAAWV,IACrCpM,EAAAC,EAAAC,cAACyM,EAAA,EAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAWP,aAVxCrC,aCEE8C,QACW,cAA7BhE,OAAOS,SAASwD,UAEe,UAA7BjE,OAAOS,SAASwD,UAEhBjE,OAAOS,SAASwD,SAASC,MACvB,2DCZNC,IAASC,OAAOpN,EAAAC,EAAAC,cAACmN,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzJ,KAAK,SAAA0J,GACjCA,EAAaC,mCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.fd895fed.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://trainscheduler-d3a50.firebaseio.com/-KsvSXlLmZRq_i-pAUhx'\r\n});\r\n\r\nexport default instance;","import * as firebase from \"firebase\";\r\n\r\n// Initialize Firebase\r\nvar config = {\r\n    apiKey: \"AIzaSyA-143MQQsB75aYzr2-JV4eeFi_j60Z9_Q\",\r\n    authDomain: \"trainscheduler-d3a50.firebaseapp.com\",\r\n    databaseURL: \"https://trainscheduler-d3a50.firebaseio.com\",\r\n    projectId: \"trainscheduler-d3a50\",\r\n    storageBucket: \"trainscheduler-d3a50.appspot.com\",\r\n    messagingSenderId: \"13218449554\"\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nconst database = firebase.database();\r\n\r\nexport {database};","import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst navbar = (props) =>{\r\n    return (\r\n        <div className='Navbar'>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default navbar;","import React from 'react';\r\nimport './Button.css';\r\n\r\nconst button = (props) =>{\r\n\r\n    let btnClass = '';\r\n    if(props.color === 'primary'){\r\n        btnClass='btn btn-primary';\r\n    }\r\n    else if(props.color === 'danger'){\r\n        btnClass = 'btn danger';\r\n    }\r\n    else{\r\n        btnClass = 'btn';\r\n    }\r\n\r\n    return(\r\n        <div className='Button'>\r\n            <button disabled={props.disabled} className={btnClass} {...props}>{props.children}</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default button;","import React from 'react';\r\nimport './Modal.css';\r\n\r\nimport Button from '../Button/Button';\r\n\r\nconst modal = (props) =>{\r\n\r\n    // console.log('props: ', props);\r\n    if(!props.showModal){\r\n        return null;\r\n    }\r\n    console.log('canSavebutton: ', props.canSaveButton);\r\n    console.log('showmodal: ', props.showModal);\r\n\r\n    return (\r\n        <div className='Modal'>\r\n            <div className='container'>\r\n                <span onClick={props.onCloseBtnClicked} className='close'>&times;</span>\r\n                <div className='header'>\r\n                    {props.title}\r\n                </div>\r\n\r\n                <div className=\"body\">\r\n                    {props.children}\r\n                </div>\r\n\r\n                <div className='footer'>\r\n                    <Button\r\n                        color='primary'\r\n                        type='button'\r\n                        onClick={props.onSaveBtnClicked}\r\n                        disabled={props.canSaveButton}\r\n                    >Create</Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default modal;","// import React from 'react';\r\n// import './Input.css';\r\n\r\n// const input = (props) =>{\r\n//     let inputElement = null;\r\n\r\n//     if(props.inputtype === 'input' && props.type === 'text'){\r\n//         inputElement = <input className='inputElement' {...props}/>;\r\n//     }\r\n//     else if(props.inputtype === 'textarea'){\r\n//         inputElement = <textarea className='inputElement' {...props}/>;\r\n//     }\r\n//     else if(props.inputtype === 'input' && props.type === 'file'){\r\n//         inputElement = <input className='' {...props}/>\r\n//     }\r\n//     else if(props.inputtype === 'input' && props.type === 'password'){\r\n//         inputElement = <input className='inputElement' {...props}/>;\r\n//     }\r\n\r\n//     return (\r\n//         <div className='Input'>\r\n//             <label>{props.label}</label>\r\n//             {inputElement}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default input;\r\n\r\nimport React from 'react';\r\nimport './Input.css';\r\n\r\nconst input = (props) =>{\r\n    let labelElement = null;\r\n    let inputElement = null;\r\n    let styleLabel = 'styleLabel';\r\n    let styleLabelForCheckbox = 'checkBoxContainer';\r\n\r\n    if(props.req){\r\n        styleLabel += ' req';\r\n        styleLabelForCheckbox += ' req';\r\n    }\r\n\r\n    if(props.inputtype === 'input' && props.type === 'text'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <input className='inputText' {...props}/>;\r\n    }\r\n\r\n    else if(props.inputtype === 'input' && props.type === 'password'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <input className='inputText' {...props}/>;\r\n    }\r\n    else if(props.inputtype === 'textarea'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <textarea className='inputText' {...props}/>;\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'file'){\r\n        // labelElement =  <label htmlFor={props.id}>{props.label}</label>;\r\n        // inputElement = <input className='' {...props}/>\r\n        let fileLabelSpan = props.filelabelspan;\r\n        let fileLabel = props.filelabel;\r\n        let spanText = props.label;\r\n        if(props.filelabelspan){\r\n            spanText = null;\r\n            fileLabel = null;\r\n        }\r\n        else if(props.filelabel){\r\n            spanText = null;\r\n            fileLabelSpan = null;\r\n        }\r\n        inputElement = <div>\r\n                        <input {...props} className=\"inputfile\"\r\n                               data-multiple-caption=\"{count} files selected\"/>\r\n                        <label htmlFor={props.id}><span>{fileLabelSpan}{fileLabel}{spanText}</span></label>\r\n                    </div>\r\n    }\r\n    else if(props.inputtype === 'select'){\r\n        labelElement =  <label className={styleLabel} htmlFor={props.id}>{props.label}</label>;\r\n        inputElement = <select className='inputSelect' {...props}>\r\n            {props.options.map(option=>{\r\n                return <option key={option.value} value={option.value}>{option.displayValue}</option>;\r\n            })}\r\n        </select>\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'radio'){\r\n        // inputElement = props.options.map(option=>{\r\n        //     return <label key={option.value} htmlFor={option.id}>\r\n        //             <input className='' {...props} value={option.value} id={option.id} name={props.name} checked={option.value === props.selected}/>{option.label}\r\n        //         </label>;\r\n        // })\r\n        inputElement = <div className='disp-flex'>\r\n                        {props.options.map(option=>{\r\n                            return <React.Fragment key={option.id}>\r\n                                <input {...props} type={props.type} className=\"buttonLikeRadio buttonLikeRadio-insurance_y_n\" id={option.id} name={props.name} value={option.value} checked={option.value === props.selected}/>\r\n                                <label className=\"round-border width100\" htmlFor={option.id}>{option.label}</label>\r\n                            </React.Fragment>\r\n                        })}\r\n                    </div>\r\n    }\r\n    else if(props.inputtype === 'input' && props.type === 'checkbox'){\r\n        // inputElement = <label>\r\n        //                 <input className='' {...props}/>{props.label}\r\n        //             </label>;\r\n        inputElement = <div>\r\n                        <label className={styleLabelForCheckbox} htmlFor={props.name}>{props.label}\r\n                        <input {...props} checked={!!props.ischecked}/>\r\n                                <span className=\"checkmark\"></span>\r\n                        </label>\r\n                    </div>\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='Input'>\r\n            {labelElement}\r\n            {inputElement}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default input;","import React from 'react';\r\nimport './Pin.css';\r\nimport Button from '../Button/Button';\r\n\r\nconst pin = (props) =>{\r\n\r\n    const style = {\r\n        // backgroundImage: `url(${props.imageUrl})`,\r\n    }\r\n\r\n    // check if we need button\r\n    let button = '';\r\n    if(props.onPinSaveButtonClicked){\r\n        button = <Button onClick={props.onPinSaveButtonClicked} className='btn btn-danger'>Save</Button>;\r\n    }\r\n\r\n    // truncate webUrl\r\n    let webUrl = '';\r\n    if(props.webUrl){\r\n        if(props.webUrl.length > 20){\r\n            webUrl = props.webUrl.substring(0, 20)+'...';\r\n        }\r\n        else{\r\n            webUrl = props.webUrl;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='Pin' style={style}>\r\n            <img src={props.imageUrl} alt=\"image\"/>\r\n            {button}\r\n            <span onClick={props.onWebUrlClicked} className=\"caption\">&nbsp;{webUrl}&nbsp;</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default pin;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport * as firebase from 'firebase';\r\nimport axios from '../../axios';\r\nimport {database} from \"../../firebase\";\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Modal from '../../components/Modal/Modal';\r\nimport Input from '../../components/Input/Input';\r\nimport Button from '../../components/Button/Button';\r\nimport Pin from '../../components/Pin/Pin';\r\nimport sampleImg from '../../assets/Swan_large_1450932169.jpg';\r\n\r\nclass Home extends Component {\r\n    state={\r\n        allUsers: [\r\n            // {\r\n            //     email: 'jin@nieblo.com',\r\n            //     firstName: 'Jin',\r\n            //     lastName: 'Redmond',\r\n            //     yourPins: [],\r\n            //     followingPins: []\r\n            // }\r\n        ],\r\n        allPins: [\r\n            // {\r\n            //     title: 'test title1',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'https://www.google.com/',\r\n            //     pinId: 0,\r\n            // },\r\n            // {\r\n            //     title: 'test title2',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'weburl2.com',\r\n            //     pinId: 11,\r\n            // },\r\n            // {\r\n            //     title: 'test title3',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'weburl3.com',\r\n            //     pinId: 22,\r\n            // },\r\n            // {\r\n            //     title: 'test title4',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'weburl4.com',\r\n            //     pinId: 33,\r\n            // },\r\n            // {\r\n            //     title: 'test title5',\r\n            //     imageUrl: sampleImg,\r\n            //     webUrl: 'weburl5.com',\r\n            //     pinId: 44,\r\n            // },\r\n        ],\r\n        showModal: false,\r\n        canSaveButton: false,\r\n    };\r\n\r\n    componentDidMount(){\r\n        console.log('component did mount');\r\n        firebase.auth().onAuthStateChanged(firebaseUser =>{\r\n            if(firebaseUser){\r\n                this.setState({ loginEmail: firebaseUser.email });\r\n\r\n                const user = firebase.auth().currentUser;\r\n                // console.log('current user: ', user);\r\n                this.loadDatabase();\r\n            }\r\n            else{\r\n                const url = '/';\r\n                window.location.href = url;\r\n                console.log('not logged in');\r\n            }\r\n        });\r\n    }\r\n\r\n    loadDatabase = () =>{\r\n        axios.get('/.json')\r\n            .then(res=>{\r\n                console.log('load: ',res.data);\r\n\r\n                // firebase won't store empty array, so create empty array here\r\n                for(let user of res.data.allUsers){\r\n                    if(!user.yourPins){\r\n                        user.yourPins = [];\r\n                    }\r\n                    if(!user.followingPins){\r\n                        user.followingPins = [];\r\n                    }\r\n                }\r\n                console.log('new res.data: ', res.data);\r\n                this.setState({\r\n                    allUsers: res.data.allUsers,\r\n                    dbLoaded: true,\r\n                    lastPinId: res.data.lastPinId,\r\n                });\r\n                this.setStateAllPins();\r\n            })\r\n            .catch(err=>console.log(err));\r\n    };\r\n\r\n    updateDatabase = (allUsers) =>{\r\n        console.log('updatemethod: ', this.state.allUsers);\r\n        console.log('pass allusers:', allUsers);\r\n\r\n        const data = [...this.state.allUsers];\r\n        const lastPinId = this.state.lastPinId;\r\n        database.ref(\"-KsvSXlLmZRq_i-pAUhx\").set({\r\n            allUsers: data,\r\n            lastPinId: lastPinId,\r\n        });\r\n    }\r\n\r\n    setStateAllPins = () =>{\r\n        const loginEmail = this.state.loginEmail;\r\n        // console.log('loginEmail: ', loginEmail);\r\n        const allUsers = [...this.state.allUsers];\r\n        // console.log('allusers: ', allUsers);\r\n\r\n        // get all pins except your own and following pins\r\n        const copyAllUsers = [...this.state.allUsers];\r\n        // console.log('copyallusers: ', copyAllUsers);\r\n\r\n        const userIndex = copyAllUsers.findIndex(val=>{\r\n            return val.email === loginEmail;\r\n        });\r\n        // console.log('userindex: ', userIndex);\r\n        // console.log('copytallusers: ', copyAllUsers);\r\n        copyAllUsers.splice(userIndex, 1);\r\n        // console.log('copyAllUsers: ', copyAllUsers);\r\n        const pinsToDisplayWithFollowingPins = [];\r\n        for(let user of copyAllUsers){\r\n            for(let pin of user.yourPins){\r\n                pinsToDisplayWithFollowingPins.push(pin);\r\n            }\r\n        }\r\n\r\n        console.log('pinsToDisplayWithFollowingPins: ',pinsToDisplayWithFollowingPins);\r\n        // console.log('allusers', allUsers[userIndex]);\r\n        // minus your following pins\r\n        const yourFollowingPins = allUsers[userIndex].followingPins;\r\n        // console.log('yourFollowingPins: ', yourFollowingPins);\r\n        const indexes = [];\r\n\r\n        // use remove multi items from array method\r\n        if(yourFollowingPins.length){\r\n            for(let remVal of yourFollowingPins){\r\n                indexes.push(pinsToDisplayWithFollowingPins.findIndex(function(val){\r\n                    return val.pinId === remVal.pinId;\r\n                }));\r\n            }\r\n\r\n            // console.log('remove index: ', indexes);\r\n\r\n            // sort indexes array\r\n            const sortedIndexes = indexes.sort(function(a, b){ return a - b});\r\n            // console.log('sorted index: ', sortedIndexes);\r\n\r\n            for(let i=sortedIndexes.length-1; i>=0; i--){\r\n                pinsToDisplayWithFollowingPins.splice(sortedIndexes[i], 1);\r\n            }\r\n\r\n            // console.log('new pinsto display: ', pinsToDisplayWithFollowingPins);\r\n\r\n        }\r\n\r\n        this.setState({allPins: pinsToDisplayWithFollowingPins});\r\n    }\r\n\r\n    logOutHandler = () =>{\r\n        console.log('logging out');\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    inputTextHandler = (ev, type) =>{\r\n        if(type === 'title'){\r\n            this.setState({title: ev.target.value})\r\n        }\r\n        else if(type === 'webUrl'){\r\n            this.setState({webUrl: ev.target.value});\r\n        }\r\n        else if(type === 'file'){\r\n            this.setState({imageUrl: ev.target.files[0]});\r\n        }\r\n    };\r\n\r\n    // modal handlers----------------------------------------\r\n    createPinHandler = (email) =>{\r\n        // console.log('create pin state: ', this.state);\r\n        if(this.state.title && this.state.imageUrl && this.state.webUrl){\r\n            const newPin = {};\r\n            newPin.title = this.state.title;\r\n            newPin.imageUrl = this.state.imageUrl;\r\n            newPin.webUrl = this.state.webUrl;\r\n\r\n            let lastPinId = this.state.lastPinId;\r\n            console.log('last id: ', lastPinId);\r\n            newPin.pinId = lastPinId+1;\r\n            console.log('++: ', newPin.pinId);\r\n\r\n            // disable save button\r\n            // update count\r\n            this.setState({\r\n                canSaveButton: true,\r\n                lastPinId: newPin.pinId,\r\n            });\r\n\r\n            // get the fle\r\n            const file = this.state.imageUrl;\r\n\r\n            // create a storage ref\r\n            const storageRef = firebase.storage().ref('uploadedImgFolder/' + file.name);\r\n\r\n            // upload file. Update state and db when finish\r\n            storageRef.put(file).then(function(){\r\n                // get the img url\r\n                const storage = firebase.storage().ref();\r\n                storage.child('uploadedImgFolder/'+file.name).getDownloadURL().then(function(url){\r\n                    console.log('url: ', url);\r\n                    newPin.imageUrl = url;\r\n                    // newPin.imageUrl = 'test url';\r\n\r\n                    // console.log('email: ', email);\r\n                    const allUsers = [...this.state.allUsers];\r\n                    console.log(\"-----\", allUsers);\r\n                    const userIndex = allUsers.findIndex(val=>{\r\n                        return val.email === email;\r\n                    });\r\n                    console.log('----', userIndex);\r\n                    allUsers[userIndex].yourPins.push(newPin);\r\n                    this.closeModalHandler();\r\n\r\n                    this.updateDatabase(allUsers);\r\n\r\n                    // enable save button\r\n                    this.setState({\r\n                        canSaveButton: false,\r\n                        title: '',\r\n                        webUrl: '',\r\n                        imageUrl: '',\r\n                    })\r\n                }.bind(this));\r\n            }.bind(this));\r\n        }\r\n    };\r\n\r\n    showModal = () =>{\r\n        this.setState({showModal: true});\r\n    };\r\n    closeModalHandler = () =>{\r\n        this.setState({showModal: false});\r\n    };\r\n\r\n    // pin handlers-------------------------------------------\r\n    webUrlHandler = (webUrl) =>{\r\n        console.log('url: ', webUrl);\r\n        window.open(webUrl);\r\n    };\r\n\r\n    savePinHandler = (pinId) =>{\r\n        console.log('pinId: ', pinId);\r\n        const allPins = [...this.state.allPins];\r\n        // console.log('allpins: ', allPins);\r\n        const indexOfPin = allPins.findIndex(val=>{\r\n            return val.pinId === pinId;\r\n        });\r\n\r\n        // console.log('index', indexOfPin);\r\n        const loginEmail = this.state.loginEmail;\r\n        const allUsers = [...this.state.allUsers];\r\n        const indexOfUser = allUsers.findIndex(val=>{\r\n            return val.email === loginEmail;\r\n        });\r\n        // console.log('indexofuser: ', indexOfUser);\r\n\r\n        allUsers[indexOfUser].followingPins.push(allPins[indexOfPin]);\r\n\r\n        this.setState({\r\n            allUsers: allUsers\r\n        });\r\n\r\n        console.log(this.state);\r\n        this.updateDatabase();\r\n\r\n        this.setStateAllPins();\r\n    };\r\n\r\n    render(){\r\n        let pins = null;\r\n        if(this.state.dbLoaded){\r\n            console.log(\"===============================\",this.state);\r\n            if(this.state.allPins && this.state.allPins.length){\r\n                pins = this.state.allPins.map(pin=>{\r\n                    return <Pin\r\n                        title={pin.title}\r\n                        imageUrl={pin.imageUrl}\r\n                        webUrl={pin.webUrl}\r\n                        key={pin.pinId}\r\n                        onWebUrlClicked={this.webUrlHandler.bind(this, pin.webUrl)}\r\n                        onPinSaveButtonClicked={this.savePinHandler.bind(this, pin.pinId)}/>\r\n                });\r\n            }\r\n            else{\r\n                pins = <p>There are no pins to display</p>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='Home'>\r\n                <Navbar>\r\n                    <div className='leftContainer'>\r\n                        <a href=\"/home\">Home</a>\r\n                        <a href=\"/pins\">your pins</a>\r\n                        <a href=\"/following\">following pins</a>\r\n                    </div>\r\n                    <div className=\"rightContainer\">\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={this.showModal}>create pin</Button>\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={this.logOutHandler}>Log out</Button>\r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Modal\r\n                    title='Create your pin'\r\n                    onSaveBtnClicked={this.createPinHandler.bind(this, this.state.loginEmail)}\r\n                    onCloseBtnClicked={this.closeModalHandler}\r\n                    showModal={this.state.showModal}\r\n                    canSaveButton={this.state.canSaveButton}\r\n                >\r\n                    <div className=\"bodyContainer\">\r\n                        <Input\r\n                            inputtype='input'\r\n                            type='text'\r\n                            label='Add a title'\r\n                            onChange={(ev)=>this.inputTextHandler(ev, 'title')}/>\r\n                        <br/>\r\n                        <Input\r\n                            inputtype='input'\r\n                            type='text'\r\n                            label='Type a website url'\r\n                            onChange={(ev)=>this.inputTextHandler(ev, 'webUrl')}/>\r\n                        <br/>\r\n                        <Input\r\n                            inputtype='input'\r\n                            type='file'\r\n                            label='upload file'\r\n                            onChange={(ev)=>this.inputTextHandler(ev, 'file')}/>\r\n                    </div>\r\n                </Modal>\r\n                <div className='pinsContainer'>\r\n                    {pins}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport './Login.css';\r\nimport * as firebase from 'firebase';\r\n\r\nimport Input from '../../components/Input/Input';\r\nimport Button from '../../components/Button/Button';\r\n\r\nclass Login extends Component{\r\n    state={\r\n        errorMessage: '',\r\n        data : {\r\n            emailText : \"\",\r\n            passwordText: \"\",\r\n        }\r\n        // emailText: '',\r\n        // passwordText: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged(firebaseUser =>{\r\n            if(firebaseUser){\r\n                console.log(firebaseUser);\r\n                const url = '/home';\r\n                window.location.href = url;\r\n            }\r\n            else{\r\n                console.log('not logged in');\r\n            }\r\n        });\r\n\r\n        const data = {\r\n            emailText: \"demo@demo.com\",\r\n            passwordText: \"password\"\r\n        }\r\n\r\n        this.setState({\r\n            data: data\r\n        });\r\n    }\r\n\r\n    // inputTextHandler = (ev, type) =>{\r\n    //     if(type === 'email'){\r\n    //         this.setState({ emailText: ev.target.value});\r\n    //     }\r\n    //     else {\r\n    //         this.setState({ passwordText: ev.target.value});\r\n    //     }\r\n    // };\r\n\r\n    inputHandler = (ev) =>{\r\n        console.log('type: ', ev.target.type);\r\n        if(ev.target.type && ev.target.type === 'file'){\r\n            // display file name when file was selected\r\n            const label = ev.target.nextElementSibling;\r\n            const labelVal = label.innerHTML;\r\n\r\n            let fileName = '';\r\n            if(ev.target.files && ev.target.files.length > 1){\r\n                fileName = (ev.target.getAttribute('data-multiple.caption') || '').replace('{count}', ev.target.files.length);\r\n            }\r\n            else{\r\n                fileName = ev.target.value.split('\\\\').pop();\r\n            }\r\n\r\n            if(fileName){\r\n                const span = ev.target.name +1;\r\n                console.log('span state: ', span);\r\n                this.setState({ [span]: fileName });\r\n            }\r\n            else{\r\n                const label = ev.target.name +2;\r\n                this.setState({[label]:labelVal});\r\n            }\r\n\r\n            // cannot upload file because of 'fakepath'\r\n            // console.log('target vleu: ', ev.target.value);\r\n\r\n            // code to save file (see insurance_form.blade.php)\r\n            // todo: save file using formData\r\n\r\n        }\r\n        else if(ev.target.type && ev.target.type === 'checkbox'){\r\n            console.log('chiecked? ', ev.target.checked);\r\n            if(ev.target.checked){\r\n                const data = {...this.state.data};\r\n                data[ev.target.name] = ev.target.value;\r\n                this.setState({ data : data });\r\n            }\r\n            else{\r\n                const data = {...this.state.data};\r\n                data[ev.target.name] = '';\r\n                this.setState({ data: data});\r\n            }\r\n        }\r\n        else{\r\n            const data = {...this.state.data};\r\n            data[ev.target.name] = ev.target.value;\r\n            this.setState({ data: data });\r\n        }\r\n        // console.log('state: ', this.state);\r\n        // console.log('value: ', ev.target.value);\r\n        // console.log('check: ', ev.target.checked);\r\n    }\r\n\r\n    handlerKeyPress = (ev) =>{\r\n        if(ev.key === 'Enter'){\r\n            this.formLoginHandler();\r\n        }\r\n    }\r\n\r\n    formLoginHandler = () =>{\r\n        const email = this.state.data.emailText;\r\n        const password = this.state.data.passwordText;\r\n        const auth = firebase.auth();\r\n        const promise = auth.signInWithEmailAndPassword(email, password);\r\n        promise.catch(e=>{\r\n            console.log(e.message);\r\n            this.setState({errorMessage: e.message});\r\n        });\r\n    }\r\n\r\n    render(){\r\n        let errorMessage = '';\r\n        if(this.state.errorMessage){\r\n            errorMessage = <p className='errorText'>{this.state.errorMessage}</p>;\r\n        }\r\n\r\n        const form = <form>\r\n            <Input\r\n                inputtype='input'\r\n                type='text'\r\n                label='Email'\r\n                value={this.state.data.emailText}\r\n                name=\"emailText\"\r\n                id=\"emailText\"\r\n                onChange={this.inputHandler}\r\n                onKeyPress={this.handleKeyPress}\r\n                autoFocus\r\n            />\r\n            <Input\r\n                inputtype='input'\r\n                type='password'\r\n                label='Password'\r\n                value={this.state.data.passwordText}\r\n                name=\"passwordText\"\r\n                id=\"passwordText\"\r\n                onChange={this.inputHandler}\r\n                onKeyPress={this.handlerKeyPress}\r\n            />\r\n            {errorMessage}\r\n            <div className='buttonContainer'>\r\n                <Button color='primary' onClick={()=>this.formLoginHandler()} type='button'>Log In</Button>\r\n                <div>or</div>\r\n                <strong><a href=\"/signup\">Sing Up</a></strong>\r\n            </div>\r\n        </form>\r\n\r\n        return (\r\n            <div className='Login'>\r\n                <h1>Login or Create Account</h1>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;","import React, {Component} from 'react';\r\nimport './Signup.css';\r\nimport * as firebase from 'firebase';\r\nimport {database} from '../../firebase';\r\nimport axios from '../../axios';\r\nimport Input from '../../components/Input/Input';\r\nimport Button from '../../components/Button/Button';\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        errorMessage: '',\r\n        firstNameText: '',\r\n        lastNameText: '',\r\n        emailText: '',\r\n        allUsers: [],\r\n        passwordText: ''\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged(firebaseUser=>{\r\n            if(firebaseUser){\r\n                console.log(firebaseUser);\r\n                const url = '/home';\r\n                window.location.href = url;\r\n            }\r\n            else{\r\n                console.log('not looged in');\r\n                this.loadDatabase();\r\n            }\r\n        })\r\n    }\r\n\r\n    loadDatabase = () =>{\r\n        console.log('load db method');\r\n        axios.get('/.json')\r\n            .then(res=>{\r\n                console.log('load: ',res.data);\r\n                if(res.data.allUsers && res.data.allUsers.length){\r\n                    console.log('yes length');\r\n                    this.setState({\r\n                        allUsers: res.data.allUsers,\r\n                        lastPinId: res.data.lastPinId,\r\n                        dbLoaded: true,\r\n                    });\r\n                }\r\n                else{\r\n                    // console.log('no length');\r\n                    this.setState({\r\n                        allUsers: [],\r\n                        lastPinId: res.data.lastPinId,\r\n                        dbLoaded: true,\r\n                    });\r\n                }\r\n            })\r\n            .catch(err=>console.log(err));\r\n    }\r\n\r\n    inputTextHandler = (ev, type) =>{\r\n        if(type === 'email'){\r\n            this.setState({\r\n                emailText: ev.target.value\r\n            });\r\n        }\r\n        else if(type==='firstName'){\r\n            this.setState({\r\n                firstNameText: ev.target.value\r\n            });\r\n        }\r\n        else if(type==='lastName'){\r\n            this.setState({\r\n                lastNameText: ev.target.value\r\n            });\r\n        }\r\n        else if(type==='password'){\r\n            this.setState({\r\n                passwordText: ev.target.value\r\n            });\r\n        }\r\n    };\r\n\r\n    updateDatabase = (email, firstName, lastName, lastPinId) =>{\r\n        const allUsers = this.state.allUsers;\r\n        console.log(\"==================\", this.state);\r\n        allUsers.push({\r\n            firstName: firstName,\r\n            lastName: lastName,\r\n            email: email,\r\n            yourPins: [],\r\n            followingPins: [],\r\n        });\r\n\r\n        database.ref('-KsvSXlLmZRq_i-pAUhx/').set({\r\n            allUsers: allUsers,\r\n            lastPinId: lastPinId,\r\n        });\r\n    }\r\n\r\n    formSignupHandler = () =>{\r\n        const email = this.state.emailText;\r\n        const password = this.state.passwordText;\r\n        const firstName = this.state.firstNameText;\r\n        const lastName = this.state.lastNameText;\r\n        const lastPinId = this.state.lastPinId;\r\n\r\n        if(firstName && lastName){\r\n            this.updateDatabase(email, firstName, lastName, lastPinId);\r\n\r\n            const auth = firebase.auth();\r\n            const promise = auth.createUserWithEmailAndPassword(email, password);\r\n            promise.catch(e=>{\r\n                console.log(e.message);\r\n                this.setState({errorMessage: e.message});\r\n            });\r\n        }\r\n        else{\r\n            const message = 'Please fill out all fields.';\r\n            this.setState({\r\n                errorMessage: message\r\n            })\r\n        }\r\n    }\r\n\r\n    handleKeyPress = (ev) =>{\r\n        if(ev.key === 'Enter'){\r\n            this.formSignupHandler();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let errorMessage = null;\r\n        let form = null;\r\n        if(this.state.dbLoaded){\r\n\r\n            if(this.state.errorMessage){\r\n                errorMessage = <p className='errorText'>{this.state.errorMessage}</p>;\r\n            }\r\n            form = <form>\r\n                <Input\r\n                    inputtype='input'\r\n                    type='text'\r\n                    label='Email'\r\n                    onChange={(ev)=>this.inputTextHandler(ev, 'email')}\r\n                    onKeyPress={this.handleKeyPress}/>\r\n                <Input\r\n                    inputtype='input'\r\n                    type='text'\r\n                    label='First name'\r\n                    onChange={(ev)=>this.inputTextHandler(ev, 'firstName')}\r\n                    onKeyPress={this.handleKeyPress}/>\r\n                <Input\r\n                    inputtype='input'\r\n                    type='text'\r\n                    label='Last name'\r\n                    onChange={(ev)=>this.inputTextHandler(ev, 'lastName')}\r\n                    onKeyPress={this.handleKeyPress}/>\r\n                <Input\r\n                    inputtype='input'\r\n                    type='password'\r\n                    label='Password'\r\n                    onChange={(ev)=>this.inputTextHandler(ev, 'password')}\r\n                    onKeyPress={this.handleKeyPress}/>\r\n                {errorMessage}\r\n                <div className='buttonContainer'>\r\n                    <Button\r\n                        onClick={()=>this.formSignupHandler()}\r\n                        type='button'\r\n                        color='primary'\r\n                    >Sign Up</Button>\r\n                </div>\r\n            </form>;\r\n        }\r\n\r\n        return (\r\n            <div className='Signup'>\r\n                {form}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from 'react';\r\nimport './Pins.css';\r\nimport * as firebase from 'firebase';\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Pin from \"../../components/Pin/Pin\";\r\nimport sampleImg from \"../../assets/Swan_large_1450932169.jpg\";\r\nimport axios from \"../../axios\";\r\nimport Button from \"../../components/Button/Button\";\r\n\r\nclass Pins extends Component{\r\n    state={\r\n        allUsers: [\r\n            // {\r\n            //     email: 'jin@nieblo.com',\r\n            //     firstName: 'Jin',\r\n            //     lastName: 'Redmond',\r\n            //     yourPins: [\r\n            //         {\r\n            //             title: 'test title1',\r\n            //             imageUrl: sampleImg,\r\n            //             webUrl: 'https://www.google.com/',\r\n            //             pinId: 0,\r\n            //         },\r\n            //         {\r\n            //             title: 'test title2',\r\n            //             imageUrl: sampleImg,\r\n            //             webUrl: 'weburl2.com',\r\n            //             pinId: 11,\r\n            //         },\r\n            //     ],\r\n            //     followingPins: []\r\n            // }\r\n        ],\r\n    }\r\n\r\n    componentDidMount(){\r\n        firebase.auth().onAuthStateChanged(firebaseUser =>{\r\n            if(firebaseUser){\r\n                this.setState({ loginEmail: firebaseUser.email });\r\n\r\n                const user = firebase.auth().currentUser;\r\n                // console.log('current user: ', user);\r\n                this.loadDatabase();\r\n            }\r\n            else{\r\n                const url = '/';\r\n                window.location.href = url;\r\n                console.log('not logged in');\r\n            }\r\n        });\r\n    }\r\n\r\n    loadDatabase = () =>{\r\n        axios.get('/.json')\r\n            .then(res=>{\r\n                // console.log('load: ',res.data);\r\n\r\n                // firebase won't store empty array, so create empty array here\r\n                for(let user of res.data.allUsers){\r\n                    if(!user.tweets){\r\n                        user.tweets = [];\r\n                    }\r\n                    if(!user.following){\r\n                        user.following = [];\r\n                    }\r\n                }\r\n                console.log('new res.data: ', res.data);\r\n                this.setState({\r\n                    allUsers: res.data.allUsers,\r\n                    dbLoaded: true,\r\n                });\r\n            })\r\n            .catch(err=>console.log(err));\r\n    }\r\n\r\n    logOutHandler = () =>{\r\n        console.log('logging out');\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    // pin handlers-------------------------------------------\r\n    webUrlHandler = (webUrl) =>{\r\n        console.log('url: ', webUrl);\r\n        window.open(webUrl);\r\n    };\r\n\r\n    render(){\r\n        let pins = null;\r\n\r\n        if(this.state.dbLoaded){\r\n            console.log('======================', this.state);\r\n            const allUsers = [...this.state.allUsers];\r\n            const loginEmail = this.state.loginEmail;\r\n            console.log('loginEmail: ', loginEmail);\r\n            const userIndex = allUsers.findIndex(val=>{\r\n                return val.email === loginEmail;\r\n            });\r\n            const currentUser = allUsers[userIndex];\r\n            console.log('currentUser: ', currentUser);\r\n\r\n            if(currentUser.yourPins && currentUser.yourPins.length){\r\n                pins = currentUser.yourPins.map((pin)=>{\r\n                    return <Pin\r\n                        title={pin.title}\r\n                        imageUrl={pin.imageUrl}\r\n                        webUrl={pin.webUrl}\r\n                        key={pin.pinId}\r\n                        onWebUrlClicked={this.webUrlHandler.bind(this, pin.webUrl)}/>\r\n                });\r\n            }\r\n            else{\r\n                pins = <p>There are no Pins to display</p>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='Pins'>\r\n                <Navbar>\r\n                    <div className='leftContainer'>\r\n                        <a href=\"/home\">Home</a>\r\n                        <a href=\"/following\">following pins</a>\r\n                    </div>\r\n                    <div className=\"rightContainer\">\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={this.logOutHandler}>Log out</Button>\r\n                    </div>\r\n                </Navbar>\r\n                <div className=\"pinsContainer\">\r\n                    {pins}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pins;","import React, { Component } from 'react';\r\nimport './FollowingPins.css';\r\nimport * as firebase from 'firebase';\r\nimport axios from '../../axios';\r\nimport {database} from \"../../firebase\";\r\n\r\nimport Navbar from '../../components/Navbar/Navbar';\r\nimport Button from '../../components/Button/Button';\r\nimport Pin from \"../../components/Pin/Pin\";\r\n\r\nclass FollowingPins extends Component {\r\n    state={\r\n\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('component did mount');\r\n        firebase.auth().onAuthStateChanged(firebaseUser =>{\r\n            if(firebaseUser){\r\n                this.setState({ loginEmail: firebaseUser.email });\r\n\r\n                const user = firebase.auth().currentUser;\r\n                // console.log('current user: ', user);\r\n                this.loadDatabase();\r\n            }\r\n            else{\r\n                const url = '/';\r\n                window.location.href = url;\r\n                console.log('not logged in');\r\n            }\r\n        });\r\n    }\r\n\r\n    loadDatabase = () =>{\r\n        axios.get('/.json')\r\n            .then(res=>{\r\n                console.log('load: ',res.data);\r\n\r\n                // firebase won't store empty array, so create empty array here\r\n                for(let user of res.data.allUsers){\r\n                    if(!user.yourPins){\r\n                        user.yourPins = [];\r\n                    }\r\n                    if(!user.followingPins){\r\n                        user.followingPins = [];\r\n                    }\r\n                }\r\n                console.log('new res.data: ', res.data);\r\n                this.setState({\r\n                    allUsers: res.data.allUsers,\r\n                    dbLoaded: true,\r\n                    lastPinId: res.data.lastPinId,\r\n                });\r\n                this.setStateFollowingPins();\r\n            })\r\n            .catch(err=>console.log(err));\r\n    };\r\n\r\n    logOutHandler = () =>{\r\n        console.log('logging out');\r\n        firebase.auth().signOut();\r\n    }\r\n\r\n    setStateFollowingPins = () =>{\r\n        const allUsers = [...this.state.allUsers];\r\n        const loginEmail = this.state.loginEmail;\r\n        console.log('loginemail: ', loginEmail);\r\n        console.log('allusers: ', allUsers);\r\n        const userIndex = allUsers.findIndex(val=>{\r\n            return val.email === loginEmail;\r\n        });\r\n        const followingPins = allUsers[userIndex].followingPins;\r\n        console.log('floowing pins: ', followingPins);\r\n        this.setState({followingPins: followingPins});\r\n    }\r\n\r\n    // pin handlers-------------------------------------------\r\n    webUrlHandler = (webUrl) =>{\r\n        console.log('url: ', webUrl);\r\n        window.open(webUrl);\r\n    };\r\n\r\n    render(){\r\n        let pins = null;\r\n        if(this.state.dbLoaded){\r\n            // render following pins\r\n            if(this.state.followingPins && this.state.followingPins.length){\r\n                console.log('yes if');\r\n                pins = this.state.followingPins.map(pin=>{\r\n                    return <Pin\r\n                        title={pin.title}\r\n                        imageUrl={pin.imageUrl}\r\n                        webUrl={pin.webUrl}\r\n                        key={pin.pinId}\r\n                        onWebUrlClicked={this.webUrlHandler.bind(this, pin.webUrl)}/>\r\n                });\r\n            }\r\n            else{\r\n                console.log('no if');\r\n                pins = <p>There are no pins to display</p>;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className='FollowingPins'>\r\n                <Navbar>\r\n                    <div className='leftContainer'>\r\n                        <a href=\"/home\">Home</a>\r\n                        <a href=\"/pins\">your pins</a>\r\n                    </div>\r\n                    <div className=\"rightContainer\">\r\n                        <Button\r\n                            color='primary'\r\n                            onClick={this.logOutHandler}>Log out</Button>\r\n                    </div>\r\n                </Navbar>\r\n                <div className=\"pinsContainer\">\r\n                    {pins}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FollowingPins;","import React, { Component } from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\n// import logo from './logo.svg';\nimport './App.css';\nimport Home from './pages/Home/Home';\nimport Login from './pages/Login/Login';\nimport Signup from './pages/Signup/Signup';\nimport Pins from './pages/Pins/Pins';\nimport FollowingPins from './pages/FollowingPins/FollowingPins';\n\nclass App extends Component {\n\n  render() {\n    return (\n        <BrowserRouter>\n            <div className=\"App\">\n                <Route path='/home' exact component={Home}/>\n                <Route path='/' exact component={Login}/>\n                <Route path='/signup' exact component={Signup}/>\n                <Route path='/pins' exact component={Pins}/>\n                <Route path='/following' exact component={FollowingPins}/>\n            </div>\n        </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Swan_large_1450932169.12691117.jpg\";"],"sourceRoot":""}